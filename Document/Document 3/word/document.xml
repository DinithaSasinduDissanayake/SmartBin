<?xml version="1.0" encoding="UTF-8"?>
<w:document xmlns:w="http://schemas.openxmlformats.org/wordprocessingml/2006/main" xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math" xmlns:r="http://schemas.openxmlformats.org/officeDocument/2006/relationships" xmlns:o="urn:schemas-microsoft-com:office:office" xmlns:v="urn:schemas-microsoft-com:vml" xmlns:w10="urn:schemas-microsoft-com:office:word" xmlns:a="http://schemas.openxmlformats.org/drawingml/2006/main" xmlns:pic="http://schemas.openxmlformats.org/drawingml/2006/picture" xmlns:wp="http://schemas.openxmlformats.org/drawingml/2006/wordprocessingDrawing">
<w:body>
    <w:bookmarkStart w:id="49" w:name="document-plan" />
    <w:p><w:pPr><w:pStyle w:val="Heading1" /></w:pPr><w:r><w:t xml:space="preserve">Document Plan</w:t></w:r></w:p>
    <w:p><w:pPr><w:pStyle w:val="Compact" /><w:numPr><w:ilvl w:val="0" /><w:numId w:val="1001" /></w:numPr></w:pPr><w:r><w:t xml:space="preserve">Complete</w:t></w:r></w:p>
    <w:bookmarkStart w:id="28" w:name="pre-body-section" />
    <w:p><w:pPr><w:pStyle w:val="Heading2" /></w:pPr><w:r><w:t xml:space="preserve">1. Pre-body Section</w:t></w:r></w:p>
    <w:p><w:pPr><w:pStyle w:val="Compact" /><w:numPr><w:ilvl w:val="0" /><w:numId w:val="1002" /></w:numPr></w:pPr><w:r><w:t xml:space="preserve">Complete</w:t></w:r></w:p>
    <w:bookmarkStart w:id="20" w:name="title-page" />
    <w:p><w:pPr><w:pStyle w:val="Heading3" /></w:pPr><w:r><w:t xml:space="preserve">1.1 Title Page</w:t></w:r></w:p>
    <w:p><w:pPr><w:pStyle w:val="Compact" /><w:numPr><w:ilvl w:val="0" /><w:numId w:val="1003" /></w:numPr></w:pPr><w:r><w:t xml:space="preserve">Complete</w:t></w:r></w:p>
    <w:p><w:pPr><w:pStyle w:val="SourceCode" /></w:pPr><w:r><w:rPr><w:rStyle w:val="VerbatimChar" /></w:rPr><w:t xml:space="preserve">SmartBin</w:t></w:r><w:r><w:br /></w:r><w:r><w:rPr><w:rStyle w:val="VerbatimChar" /></w:rPr><w:t xml:space="preserve">Final Project Report</w:t></w:r><w:r><w:br /></w:r><w:r><w:br /></w:r><w:r><w:rPr><w:rStyle w:val="VerbatimChar" /></w:rPr><w:t xml:space="preserve">Sri Lanka Institute of Information Technology</w:t></w:r><w:r><w:br /></w:r><w:r><w:rPr><w:rStyle w:val="VerbatimChar" /></w:rPr><w:t xml:space="preserve">IT2080 Information Technology Project</w:t></w:r><w:r><w:br /></w:r><w:r><w:br /></w:r><w:r><w:rPr><w:rStyle w:val="VerbatimChar" /></w:rPr><w:t xml:space="preserve">Group ITP_WE_B3_57</w:t></w:r><w:r><w:br /></w:r><w:r><w:br /></w:r><w:r><w:rPr><w:rStyle w:val="VerbatimChar" /></w:rPr><w:t xml:space="preserve">October 2025</w:t></w:r></w:p>
    <w:bookmarkEnd w:id="20" />
    <w:bookmarkStart w:id="21" w:name="declaration" />
    <w:p><w:pPr><w:pStyle w:val="Heading3" /></w:pPr><w:r><w:t xml:space="preserve">1.2 Declaration</w:t></w:r></w:p>
    <w:p><w:pPr><w:pStyle w:val="Compact" /><w:numPr><w:ilvl w:val="0" /><w:numId w:val="1004" /></w:numPr></w:pPr><w:r><w:t xml:space="preserve">Complete</w:t></w:r></w:p>
    <w:p><w:pPr><w:pStyle w:val="SourceCode" /></w:pPr><w:r><w:rPr><w:rStyle w:val="VerbatimChar" /></w:rPr><w:t xml:space="preserve">Declaration</w:t></w:r><w:r><w:br /></w:r><w:r><w:rPr><w:rStyle w:val="VerbatimChar" /></w:rPr><w:t xml:space="preserve">This project report is our original work and the content is not plagiarized from any other resource.</w:t></w:r><w:r><w:br /></w:r><w:r><w:rPr><w:rStyle w:val="VerbatimChar" /></w:rPr><w:t xml:space="preserve">References for all the content taken from external resources are correctly cited. To the best of our</w:t></w:r><w:r><w:br /></w:r><w:r><w:rPr><w:rStyle w:val="VerbatimChar" /></w:rPr><w:t xml:space="preserve">knowledge, this report does not contain any material published or written by third parties, except as</w:t></w:r><w:r><w:br /></w:r><w:r><w:rPr><w:rStyle w:val="VerbatimChar" /></w:rPr><w:t xml:space="preserve">acknowledged in the text.</w:t></w:r><w:r><w:br /></w:r><w:r><w:br /></w:r><w:r><w:rPr><w:rStyle w:val="VerbatimChar" /></w:rPr><w:t xml:space="preserve">Authors:</w:t></w:r><w:r><w:br /></w:r><w:r><w:rPr><w:rStyle w:val="VerbatimChar" /></w:rPr><w:t xml:space="preserve">Author SID  Author name Signature</w:t></w:r><w:r><w:br /></w:r><w:r><w:rPr><w:rStyle w:val="VerbatimChar" /></w:rPr><w:t xml:space="preserve">IT23373952  Dissanayake D.S.    ………………….</w:t></w:r><w:r><w:br /></w:r><w:r><w:rPr><w:rStyle w:val="VerbatimChar" /></w:rPr><w:t xml:space="preserve">IT23232990  Thennakoon S.S.H.   ………………….</w:t></w:r><w:r><w:br /></w:r><w:r><w:rPr><w:rStyle w:val="VerbatimChar" /></w:rPr><w:t xml:space="preserve">ITXXXXXX    Member3 name    ………………….</w:t></w:r><w:r><w:br /></w:r><w:r><w:rPr><w:rStyle w:val="VerbatimChar" /></w:rPr><w:t xml:space="preserve">ITXXXXXX    Member4 name    ………………….</w:t></w:r><w:r><w:br /></w:r><w:r><w:rPr><w:rStyle w:val="VerbatimChar" /></w:rPr><w:t xml:space="preserve">ITXXXXXX    Member5 name    ………………….</w:t></w:r><w:r><w:br /></w:r><w:r><w:br /></w:r><w:r><w:rPr><w:rStyle w:val="VerbatimChar" /></w:rPr><w:t xml:space="preserve">Date:…………………………..</w:t></w:r></w:p>
    <w:bookmarkEnd w:id="21" />
    <w:bookmarkStart w:id="22" w:name="abstract" />
    <w:p><w:pPr><w:pStyle w:val="Heading3" /></w:pPr><w:r><w:t xml:space="preserve">1.3 Abstract</w:t></w:r></w:p>
    <w:p><w:pPr><w:pStyle w:val="Compact" /><w:numPr><w:ilvl w:val="0" /><w:numId w:val="1005" /></w:numPr></w:pPr><w:r><w:t xml:space="preserve">Complete</w:t></w:r></w:p>
    <w:p><w:pPr><w:pStyle w:val="BlockText" /></w:pPr><w:r><w:t xml:space="preserve">[!tip]</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:t xml:space="preserve">- A summary of the entire body section (maximum 1 page)</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:t xml:space="preserve">- Around 90-120 words for Abstract</w:t></w:r></w:p>
    <w:bookmarkEnd w:id="22" />
    <w:bookmarkStart w:id="23" w:name="acknowledgements" />
    <w:p><w:pPr><w:pStyle w:val="Heading3" /></w:pPr><w:r><w:t xml:space="preserve">1.4 Acknowledgements</w:t></w:r></w:p>
    <w:p><w:pPr><w:pStyle w:val="Compact" /><w:numPr><w:ilvl w:val="0" /><w:numId w:val="1006" /></w:numPr></w:pPr><w:r><w:t xml:space="preserve">Complete</w:t></w:r></w:p>
    <w:p><w:pPr><w:pStyle w:val="BlockText" /></w:pPr><w:r><w:t xml:space="preserve">[!tip]</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:t xml:space="preserve">Acknowledge all the parties who supported (maximum 1 page)</w:t></w:r></w:p>
    <w:bookmarkEnd w:id="23" />
    <w:bookmarkStart w:id="24" w:name="table-of-contents" />
    <w:p><w:pPr><w:pStyle w:val="Heading3" /></w:pPr><w:r><w:t xml:space="preserve">1.5 Table of Contents</w:t></w:r></w:p>
    <w:p><w:pPr><w:pStyle w:val="Compact" /><w:numPr><w:ilvl w:val="0" /><w:numId w:val="1007" /></w:numPr></w:pPr><w:r><w:t xml:space="preserve">Complete</w:t></w:r></w:p>
    <w:p><w:pPr><w:pStyle w:val="BlockText" /></w:pPr><w:r><w:t xml:space="preserve">[!tip]</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:t xml:space="preserve">Recommend to generate the ToC using the MS Word’s tool</w:t></w:r></w:p>
    <w:bookmarkEnd w:id="24" />
    <w:bookmarkStart w:id="25" w:name="list-of-tables" />
    <w:p><w:pPr><w:pStyle w:val="Heading3" /></w:pPr><w:r><w:t xml:space="preserve">1.6 List of Tables</w:t></w:r></w:p>
    <w:p><w:pPr><w:pStyle w:val="Compact" /><w:numPr><w:ilvl w:val="0" /><w:numId w:val="1008" /></w:numPr></w:pPr><w:r><w:t xml:space="preserve">Complete</w:t></w:r></w:p>
    <w:p><w:pPr><w:pStyle w:val="BlockText" /></w:pPr><w:r><w:t xml:space="preserve">[!info]</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:t xml:space="preserve">Recommend to generate the LoT using the MS Word’s tool</w:t></w:r></w:p>
    <w:p><w:pPr><w:pStyle w:val="BlockText" /></w:pPr><w:r><w:rPr><w:i /><w:iCs /></w:rPr><w:t xml:space="preserve">What is list of tables?</w:t></w:r></w:p>
    <w:bookmarkEnd w:id="25" />
    <w:bookmarkStart w:id="26" w:name="list-of-figures" />
    <w:p><w:pPr><w:pStyle w:val="Heading3" /></w:pPr><w:r><w:t xml:space="preserve">1.7 List of Figures</w:t></w:r></w:p>
    <w:p><w:pPr><w:pStyle w:val="Compact" /><w:numPr><w:ilvl w:val="0" /><w:numId w:val="1009" /></w:numPr></w:pPr><w:r><w:t xml:space="preserve">Complete</w:t></w:r></w:p>
    <w:p><w:pPr><w:pStyle w:val="BlockText" /></w:pPr><w:r><w:t xml:space="preserve">[!info]</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:t xml:space="preserve">Recommend to generate the ToF using the MS Word’s tool</w:t></w:r></w:p>
    <w:bookmarkEnd w:id="26" />
    <w:bookmarkStart w:id="27" w:name="list-of-abbreviations" />
    <w:p><w:pPr><w:pStyle w:val="Heading3" /></w:pPr><w:r><w:t xml:space="preserve">1.8 List of Abbreviations</w:t></w:r></w:p>
    <w:p><w:pPr><w:pStyle w:val="Compact" /><w:numPr><w:ilvl w:val="0" /><w:numId w:val="1010" /></w:numPr></w:pPr><w:r><w:t xml:space="preserve">Complete</w:t></w:r></w:p>
    <w:p><w:pPr><w:pStyle w:val="BlockText" /></w:pPr><w:r><w:t xml:space="preserve">[!info]</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:t xml:space="preserve">Sort them alphabetically</w:t></w:r></w:p>
    <w:p><w:r><w:pict><v:rect style="width:0;height:1.5pt" o:hralign="center" o:hrstd="t" o:hr="t" /></w:pict></w:r></w:p>
    <w:bookmarkEnd w:id="27" />
    <w:bookmarkEnd w:id="28" />
    <w:bookmarkStart w:id="44" w:name="the-main-body" />
    <w:p><w:pPr><w:pStyle w:val="Heading2" /></w:pPr><w:r><w:t xml:space="preserve">2. The Main Body</w:t></w:r></w:p>
    <w:p><w:pPr><w:pStyle w:val="Compact" /><w:numPr><w:ilvl w:val="0" /><w:numId w:val="1011" /></w:numPr></w:pPr><w:r><w:t xml:space="preserve">Complete</w:t></w:r></w:p>
    <w:bookmarkStart w:id="38" w:name="chapter-01-introduction" />
    <w:p><w:pPr><w:pStyle w:val="Heading3" /></w:pPr><w:r><w:t xml:space="preserve">2.1 Chapter 01: Introduction</w:t></w:r></w:p>
    <w:p><w:pPr><w:pStyle w:val="Compact" /><w:numPr><w:ilvl w:val="0" /><w:numId w:val="1012" /></w:numPr></w:pPr><w:r><w:t xml:space="preserve">Complete</w:t></w:r></w:p>
    <w:bookmarkStart w:id="29" w:name="background" />
    <w:p><w:pPr><w:pStyle w:val="Heading4" /></w:pPr><w:r><w:t xml:space="preserve">2.1.1 Background</w:t></w:r></w:p>
    <w:p><w:pPr><w:pStyle w:val="Compact" /><w:numPr><w:ilvl w:val="0" /><w:numId w:val="1013" /></w:numPr></w:pPr><w:r><w:t xml:space="preserve">Complete</w:t></w:r></w:p>
    <w:bookmarkEnd w:id="29" />
    <w:bookmarkStart w:id="30" w:name="problem-and-motivation" />
    <w:p><w:pPr><w:pStyle w:val="Heading4" /></w:pPr><w:r><w:t xml:space="preserve">2.1.2 Problem and Motivation</w:t></w:r></w:p>
    <w:p><w:pPr><w:pStyle w:val="Compact" /><w:numPr><w:ilvl w:val="0" /><w:numId w:val="1014" /></w:numPr></w:pPr><w:r><w:t xml:space="preserve">Complete</w:t></w:r></w:p>
    <w:p><w:pPr><w:pStyle w:val="BlockText" /></w:pPr><w:r><w:t xml:space="preserve">[!important]</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:t xml:space="preserve">Problem and motivation should be described more thoroughly</w:t></w:r></w:p>
    <w:bookmarkEnd w:id="30" />
    <w:bookmarkStart w:id="31" w:name="literature-review" />
    <w:p><w:pPr><w:pStyle w:val="Heading4" /></w:pPr><w:r><w:t xml:space="preserve">2.1.3 Literature Review</w:t></w:r></w:p>
    <w:p><w:pPr><w:pStyle w:val="Compact" /><w:numPr><w:ilvl w:val="0" /><w:numId w:val="1015" /></w:numPr></w:pPr><w:r><w:t xml:space="preserve">Complete</w:t></w:r></w:p>
    <w:p><w:pPr><w:pStyle w:val="FirstParagraph" /></w:pPr><w:r><w:t xml:space="preserve">The waste management software landscape features a range of platforms addressing user management, complaint handling, and financial operations. Below is a comparative review of leading solutions, focusing on their user and financial management modules, and how SmartBin positions itself as an integrated, locally relevant alternative.</w:t></w:r></w:p>
    <w:p><w:pPr><w:pStyle w:val="BodyText" /></w:pPr><w:r><w:rPr><w:b /><w:bCs /></w:rPr><w:t xml:space="preserve">1. Access Weighsoft</w:t></w:r><w:r><w:br /></w:r><w:r><w:t xml:space="preserve">A cloud-based modular SaaS, Access Weighsoft offers browser-based portals for administrators, fleet operators, and customers. It features robust role-based access control (RBAC), real-time dashboards, and seamless integration with finance packages (e.g., Sage, Xero). Automated invoicing and customizable billing templates are standard. However, its modular approach may require additional configuration for full integration across all business functions.</w:t></w:r></w:p>
    <w:p><w:pPr><w:pStyle w:val="BodyText" /></w:pPr><w:r><w:rPr><w:b /><w:bCs /></w:rPr><w:t xml:space="preserve">2. WasteWORKS</w:t></w:r><w:r><w:br /></w:r><w:r><w:t xml:space="preserve">This client-server system (with web portal add-on) supports roles such as billing clerks and dispatchers. It includes a ticketing module for work orders and basic user security. Financially, it enables bulk cycle-based invoicing and integrates with general ledger systems. Its on-premises nature and limited API support can restrict scalability and integration with modern web services.</w:t></w:r></w:p>
    <w:p><w:pPr><w:pStyle w:val="BodyText" /></w:pPr><w:r><w:rPr><w:b /><w:bCs /></w:rPr><w:t xml:space="preserve">3. AMCS Platform</w:t></w:r><w:r><w:br /></w:r><w:r><w:t xml:space="preserve">AMCS is an enterprise ERP with CRM, customer portals, and integrated ticketing. It supports dynamic pricing, cyclical/ad-hoc billing, and advanced BI dashboards. Its monolithic architecture is powerful but may be complex to deploy and adapt for smaller or rapidly evolving organizations.</w:t></w:r></w:p>
    <w:p><w:pPr><w:pStyle w:val="BodyText" /></w:pPr><w:r><w:rPr><w:b /><w:bCs /></w:rPr><w:t xml:space="preserve">4. Waste Logics</w:t></w:r><w:r><w:br /></w:r><w:r><w:t xml:space="preserve">A cloud-native SaaS, Waste Logics provides multi-tenant CRM, driver mobile apps, and a Service Hub for ticketing. It supports flexible invoicing, two-way sync with popular accounting software, and KPI dashboards. Its microservices architecture allows for frequent updates and robust REST API integrations, making it highly adaptable.</w:t></w:r></w:p>
    <w:p><w:pPr><w:pStyle w:val="BodyText" /></w:pPr><w:r><w:rPr><w:b /><w:bCs /></w:rPr><w:t xml:space="preserve">5. Hauler Hero</w:t></w:r><w:r><w:br /></w:r><w:r><w:t xml:space="preserve">Hauler Hero is a modern microservices-based SaaS with OAuth-based RBAC, mobile apps for drivers, and a customer portal for payments and service history. It features a</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:t xml:space="preserve">‘Follow Up’</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:t xml:space="preserve">task system for complaints and supports bulk/tiered billing with public APIs for payment integration. Its mobile-first design and open APIs make it suitable for dynamic, customer-facing operations.</w:t></w:r></w:p>
    <w:p><w:pPr><w:pStyle w:val="BodyText" /></w:pPr><w:r><w:rPr><w:b /><w:bCs /></w:rPr><w:t xml:space="preserve">6. Evreka</w:t></w:r><w:r><w:br /></w:r><w:r><w:t xml:space="preserve">Evreka offers SaaS with citizen and commercial portals, complaint logging, and real-time dashboards. Its financial module includes contract pricing, auto-invoicing, and AR/AP, with REST APIs for external integration. Its modular microservices style supports scalability and extensibility.</w:t></w:r></w:p>
    <w:p><w:pPr><w:pStyle w:val="BodyText" /></w:pPr><w:r><w:rPr><w:b /><w:bCs /></w:rPr><w:t xml:space="preserve">7. Sensoneo</w:t></w:r><w:r><w:br /></w:r><w:r><w:t xml:space="preserve">Sensoneo focuses on municipal operations, providing citizen/admin portals, complaint tracking, and IoT integration for real-time analytics. It does not include a financial module, instead integrating with external billing systems.</w:t></w:r></w:p>
    <w:p><w:pPr><w:pStyle w:val="BodyText" /></w:pPr><w:r><w:rPr><w:b /><w:bCs /></w:rPr><w:t xml:space="preserve">Comparative Summary</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:t xml:space="preserve">- Most leading platforms provide granular RBAC, self-service portals, ticketing/complaint workflows, and flexible billing engines.</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:t xml:space="preserve">- Cloud-native, microservices-based solutions (Waste Logics, Hauler Hero, Evreka) offer superior scalability and integration potential compared to monolithic or on-premises systems.</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:t xml:space="preserve">- Financial management features typically include automated invoicing, tiered billing, and dashboard analytics, with varying degrees of integration with external accounting systems.</w:t></w:r></w:p>
    <w:p><w:pPr><w:pStyle w:val="BodyText" /></w:pPr><w:r><w:rPr><w:b /><w:bCs /></w:rPr><w:t xml:space="preserve">SmartBin’s Differentiation</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:t xml:space="preserve">SmartBin is designed as a fully integrated MERN-stack solution tailored for Sri Lanka’s waste management sector. It combines:</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:t xml:space="preserve">- Unified user and staff management with RBAC and self-service dashboards for all roles (admin, staff, customer, recycler).</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:t xml:space="preserve">- Centralized complaint and feedback ticketing, linked to specific services and users.</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:t xml:space="preserve">- Flexible, modular financial management supporting subscriptions, payroll, and real-time analytics, with planned integration to local payment gateways.</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:t xml:space="preserve">- Microservices-inspired architecture for scalability, rapid updates, and future integration with IoT, GIS, and third-party services.</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:t xml:space="preserve">- Local customization for regulatory, language, and business process needs, addressing gaps in international solutions.</w:t></w:r></w:p>
    <w:p><w:pPr><w:pStyle w:val="BodyText" /></w:pPr><w:r><w:t xml:space="preserve">By learning from global best practices and focusing on local requirements, SmartBin aims to deliver a seamless, scalable, and user-friendly waste management platform.</w:t></w:r></w:p>
    <w:p><w:pPr><w:pStyle w:val="BodyText" /></w:pPr><w:r><w:rPr><w:b /><w:bCs /></w:rPr><w:t xml:space="preserve">Comparative Table: User, Staff, and Complaint Management</w:t></w:r></w:p>
    <w:tbl><w:tblPr><w:tblStyle w:val="Table" /><w:tblW w:type="pct" w:w="5000" /><w:tblLayout w:type="fixed" /><w:tblLook w:firstRow="1" w:lastRow="0" w:firstColumn="0" w:lastColumn="0" w:noHBand="0" w:noVBand="0" w:val="0020" /></w:tblPr><w:tblGrid><w:gridCol w:w="990" /><w:gridCol w:w="1760" /><w:gridCol w:w="1485" /><w:gridCol w:w="2310" /><w:gridCol w:w="1375" /></w:tblGrid><w:tr><w:trPr><w:tblHeader w:val="on" /></w:trPr><w:tc><w:tcPr /><w:p><w:pPr><w:pStyle w:val="Compact" /></w:pPr><w:r><w:t xml:space="preserve">Platform</w:t></w:r></w:p></w:tc><w:tc><w:tcPr /><w:p><w:pPr><w:pStyle w:val="Compact" /></w:pPr><w:r><w:t xml:space="preserve">User Management &amp; Roles (RBAC)</w:t></w:r></w:p></w:tc><w:tc><w:tcPr /><w:p><w:pPr><w:pStyle w:val="Compact" /></w:pPr><w:r><w:t xml:space="preserve">Complaint Handling System</w:t></w:r></w:p></w:tc><w:tc><w:tcPr /><w:p><w:pPr><w:pStyle w:val="Compact" /></w:pPr><w:r><w:t xml:space="preserve">API/Integration (User/Complaint Focused)</w:t></w:r></w:p></w:tc><w:tc><w:tcPr /><w:p><w:pPr><w:pStyle w:val="Compact" /></w:pPr><w:r><w:t xml:space="preserve">Architecture Highlights</w:t></w:r></w:p></w:tc></w:tr><w:tr><w:tc><w:tcPr /><w:p><w:pPr><w:pStyle w:val="Compact" /></w:pPr><w:r><w:t xml:space="preserve">Access Weighsoft</w:t></w:r></w:p></w:tc><w:tc><w:tcPr /><w:p><w:pPr><w:pStyle w:val="Compact" /></w:pPr><w:r><w:t xml:space="preserve">Admin, Fleet, Customer Portals</w:t></w:r></w:p></w:tc><w:tc><w:tcPr /><w:p><w:pPr><w:pStyle w:val="Compact" /></w:pPr><w:r><w:t xml:space="preserve">N/A</w:t></w:r></w:p></w:tc><w:tc><w:tcPr /><w:p><w:pPr><w:pStyle w:val="Compact" /></w:pPr><w:r><w:t xml:space="preserve">REST (for some modules)</w:t></w:r></w:p></w:tc><w:tc><w:tcPr /><w:p><w:pPr><w:pStyle w:val="Compact" /></w:pPr><w:r><w:t xml:space="preserve">Cloud Modular SaaS</w:t></w:r></w:p></w:tc></w:tr><w:tr><w:tc><w:tcPr /><w:p><w:pPr><w:pStyle w:val="Compact" /></w:pPr><w:r><w:t xml:space="preserve">WasteWORKS</w:t></w:r></w:p></w:tc><w:tc><w:tcPr /><w:p><w:pPr><w:pStyle w:val="Compact" /></w:pPr><w:r><w:t xml:space="preserve">Office, Dispatch, Billing</w:t></w:r></w:p></w:tc><w:tc><w:tcPr /><w:p><w:pPr><w:pStyle w:val="Compact" /></w:pPr><w:r><w:t xml:space="preserve">Basic ticketing</w:t></w:r></w:p></w:tc><w:tc><w:tcPr /><w:p><w:pPr><w:pStyle w:val="Compact" /></w:pPr><w:r><w:t xml:space="preserve">Limited</w:t></w:r></w:p></w:tc><w:tc><w:tcPr /><w:p><w:pPr><w:pStyle w:val="Compact" /></w:pPr><w:r><w:t xml:space="preserve">On-prem Client-Server</w:t></w:r></w:p></w:tc></w:tr><w:tr><w:tc><w:tcPr /><w:p><w:pPr><w:pStyle w:val="Compact" /></w:pPr><w:r><w:t xml:space="preserve">AMCS Platform</w:t></w:r></w:p></w:tc><w:tc><w:tcPr /><w:p><w:pPr><w:pStyle w:val="Compact" /></w:pPr><w:r><w:t xml:space="preserve">Enterprise roles, Customer Portal</w:t></w:r></w:p></w:tc><w:tc><w:tcPr /><w:p><w:pPr><w:pStyle w:val="Compact" /></w:pPr><w:r><w:t xml:space="preserve">CRM integrated ticketing</w:t></w:r></w:p></w:tc><w:tc><w:tcPr /><w:p><w:pPr><w:pStyle w:val="Compact" /></w:pPr><w:r><w:t xml:space="preserve">BI/Connectors</w:t></w:r></w:p></w:tc><w:tc><w:tcPr /><w:p><w:pPr><w:pStyle w:val="Compact" /></w:pPr><w:r><w:t xml:space="preserve">Monolithic ERP</w:t></w:r></w:p></w:tc></w:tr><w:tr><w:tc><w:tcPr /><w:p><w:pPr><w:pStyle w:val="Compact" /></w:pPr><w:r><w:t xml:space="preserve">Waste Logics</w:t></w:r></w:p></w:tc><w:tc><w:tcPr /><w:p><w:pPr><w:pStyle w:val="Compact" /></w:pPr><w:r><w:t xml:space="preserve">Multi-tenant, Driver Apps</w:t></w:r></w:p></w:tc><w:tc><w:tcPr /><w:p><w:pPr><w:pStyle w:val="Compact" /></w:pPr><w:r><w:t xml:space="preserve">Service Hub ticketing</w:t></w:r></w:p></w:tc><w:tc><w:tcPr /><w:p><w:pPr><w:pStyle w:val="Compact" /></w:pPr><w:r><w:t xml:space="preserve">REST (Accounting sync)</w:t></w:r></w:p></w:tc><w:tc><w:tcPr /><w:p><w:pPr><w:pStyle w:val="Compact" /></w:pPr><w:r><w:t xml:space="preserve">Cloud Microservices</w:t></w:r></w:p></w:tc></w:tr><w:tr><w:tc><w:tcPr /><w:p><w:pPr><w:pStyle w:val="Compact" /></w:pPr><w:r><w:t xml:space="preserve">Hauler Hero</w:t></w:r></w:p></w:tc><w:tc><w:tcPr /><w:p><w:pPr><w:pStyle w:val="Compact" /></w:pPr><w:r><w:t xml:space="preserve">Owner, Dispatch, CSR, Driver</w:t></w:r></w:p></w:tc><w:tc><w:tcPr /><w:p><w:pPr><w:pStyle w:val="Compact" /></w:pPr><w:r><w:t xml:space="preserve">Follow-Up tasks</w:t></w:r></w:p></w:tc><w:tc><w:tcPr /><w:p><w:pPr><w:pStyle w:val="Compact" /></w:pPr><w:r><w:t xml:space="preserve">Public APIs</w:t></w:r></w:p></w:tc><w:tc><w:tcPr /><w:p><w:pPr><w:pStyle w:val="Compact" /></w:pPr><w:r><w:t xml:space="preserve">Microservices</w:t></w:r></w:p></w:tc></w:tr><w:tr><w:tc><w:tcPr /><w:p><w:pPr><w:pStyle w:val="Compact" /></w:pPr><w:r><w:t xml:space="preserve">Evreka</w:t></w:r></w:p></w:tc><w:tc><w:tcPr /><w:p><w:pPr><w:pStyle w:val="Compact" /></w:pPr><w:r><w:t xml:space="preserve">Citizen, Commercial, Contractor</w:t></w:r></w:p></w:tc><w:tc><w:tcPr /><w:p><w:pPr><w:pStyle w:val="Compact" /></w:pPr><w:r><w:t xml:space="preserve">Engagement portal</w:t></w:r></w:p></w:tc><w:tc><w:tcPr /><w:p><w:pPr><w:pStyle w:val="Compact" /></w:pPr><w:r><w:t xml:space="preserve">REST (ERP integration)</w:t></w:r></w:p></w:tc><w:tc><w:tcPr /><w:p><w:pPr><w:pStyle w:val="Compact" /></w:pPr><w:r><w:t xml:space="preserve">Cloud SaaS Modular</w:t></w:r></w:p></w:tc></w:tr><w:tr><w:tc><w:tcPr /><w:p><w:pPr><w:pStyle w:val="Compact" /></w:pPr><w:r><w:t xml:space="preserve">Sensoneo</w:t></w:r></w:p></w:tc><w:tc><w:tcPr /><w:p><w:pPr><w:pStyle w:val="Compact" /></w:pPr><w:r><w:t xml:space="preserve">Citizens, Admins</w:t></w:r></w:p></w:tc><w:tc><w:tcPr /><w:p><w:pPr><w:pStyle w:val="Compact" /></w:pPr><w:r><w:t xml:space="preserve">Built-in complaint log</w:t></w:r></w:p></w:tc><w:tc><w:tcPr /><w:p><w:pPr><w:pStyle w:val="Compact" /></w:pPr><w:r><w:t xml:space="preserve">IoT &amp; Data APIs</w:t></w:r></w:p></w:tc><w:tc><w:tcPr /><w:p><w:pPr><w:pStyle w:val="Compact" /></w:pPr><w:r><w:t xml:space="preserve">Cloud IoT Platform</w:t></w:r></w:p></w:tc></w:tr><w:tr><w:tc><w:tcPr /><w:p><w:pPr><w:pStyle w:val="Compact" /></w:pPr><w:r><w:rPr><w:b /><w:bCs /></w:rPr><w:t xml:space="preserve">SmartBin</w:t></w:r></w:p></w:tc><w:tc><w:tcPr /><w:p><w:pPr><w:pStyle w:val="Compact" /></w:pPr><w:r><w:t xml:space="preserve">Admin, Staff, Customer, Recycler (RBAC planned)</w:t></w:r></w:p></w:tc><w:tc><w:tcPr /><w:p><w:pPr><w:pStyle w:val="Compact" /></w:pPr><w:r><w:t xml:space="preserve">Centralized ticketing (planned)</w:t></w:r></w:p></w:tc><w:tc><w:tcPr /><w:p><w:pPr><w:pStyle w:val="Compact" /></w:pPr><w:r><w:t xml:space="preserve">RESTful API, JWT &amp; MFA for auth, Email (SendGrid) for notifications</w:t></w:r></w:p></w:tc><w:tc><w:tcPr /><w:p><w:pPr><w:pStyle w:val="Compact" /></w:pPr><w:r><w:t xml:space="preserve">MERN, Microservices-inspired</w:t></w:r></w:p></w:tc></w:tr></w:tbl>
    <w:p><w:pPr><w:pStyle w:val="BodyText" /></w:pPr><w:r><w:rPr><w:b /><w:bCs /></w:rPr><w:t xml:space="preserve">Comparative Table: Financial Management</w:t></w:r></w:p>
    <w:tbl><w:tblPr><w:tblStyle w:val="Table" /><w:tblW w:type="pct" w:w="5000" /><w:tblLayout w:type="fixed" /><w:tblLook w:firstRow="1" w:lastRow="0" w:firstColumn="0" w:lastColumn="0" w:noHBand="0" w:noVBand="0" w:val="0020" /></w:tblPr><w:tblGrid><w:gridCol w:w="1261" /><w:gridCol w:w="2453" /><w:gridCol w:w="2453" /><w:gridCol w:w="1752" /></w:tblGrid><w:tr><w:trPr><w:tblHeader w:val="on" /></w:trPr><w:tc><w:tcPr /><w:p><w:pPr><w:pStyle w:val="Compact" /></w:pPr><w:r><w:t xml:space="preserve">Platform</w:t></w:r></w:p></w:tc><w:tc><w:tcPr /><w:p><w:pPr><w:pStyle w:val="Compact" /></w:pPr><w:r><w:t xml:space="preserve">Key Financial Management Features</w:t></w:r></w:p></w:tc><w:tc><w:tcPr /><w:p><w:pPr><w:pStyle w:val="Compact" /></w:pPr><w:r><w:t xml:space="preserve">API/Integration (Finance Focused)</w:t></w:r></w:p></w:tc><w:tc><w:tcPr /><w:p><w:pPr><w:pStyle w:val="Compact" /></w:pPr><w:r><w:t xml:space="preserve">Architecture Highlights</w:t></w:r></w:p></w:tc></w:tr><w:tr><w:tc><w:tcPr /><w:p><w:pPr><w:pStyle w:val="Compact" /></w:pPr><w:r><w:t xml:space="preserve">Access Weighsoft</w:t></w:r></w:p></w:tc><w:tc><w:tcPr /><w:p><w:pPr><w:pStyle w:val="Compact" /></w:pPr><w:r><w:t xml:space="preserve">Finance integrations (Sage, Xero), Automated Invoicing, Customizable Templates</w:t></w:r></w:p></w:tc><w:tc><w:tcPr /><w:p><w:pPr><w:pStyle w:val="Compact" /></w:pPr><w:r><w:t xml:space="preserve">REST (Finance connectors)</w:t></w:r></w:p></w:tc><w:tc><w:tcPr /><w:p><w:pPr><w:pStyle w:val="Compact" /></w:pPr><w:r><w:t xml:space="preserve">Cloud Modular SaaS</w:t></w:r></w:p></w:tc></w:tr><w:tr><w:tc><w:tcPr /><w:p><w:pPr><w:pStyle w:val="Compact" /></w:pPr><w:r><w:t xml:space="preserve">WasteWORKS</w:t></w:r></w:p></w:tc><w:tc><w:tcPr /><w:p><w:pPr><w:pStyle w:val="Compact" /></w:pPr><w:r><w:t xml:space="preserve">“One-Key”</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:t xml:space="preserve">Bulk Billing, AR/AP, GL Posting, Crystal Reports</w:t></w:r></w:p></w:tc><w:tc><w:tcPr /><w:p><w:pPr><w:pStyle w:val="Compact" /></w:pPr><w:r><w:t xml:space="preserve">Limited</w:t></w:r></w:p></w:tc><w:tc><w:tcPr /><w:p><w:pPr><w:pStyle w:val="Compact" /></w:pPr><w:r><w:t xml:space="preserve">On-prem Client-Server</w:t></w:r></w:p></w:tc></w:tr><w:tr><w:tc><w:tcPr /><w:p><w:pPr><w:pStyle w:val="Compact" /></w:pPr><w:r><w:t xml:space="preserve">AMCS Platform</w:t></w:r></w:p></w:tc><w:tc><w:tcPr /><w:p><w:pPr><w:pStyle w:val="Compact" /></w:pPr><w:r><w:t xml:space="preserve">Dynamic Pricing, Cyclical/Ad-hoc Billing, AR/AP, BI Dashboards</w:t></w:r></w:p></w:tc><w:tc><w:tcPr /><w:p><w:pPr><w:pStyle w:val="Compact" /></w:pPr><w:r><w:t xml:space="preserve">BI/Connectors</w:t></w:r></w:p></w:tc><w:tc><w:tcPr /><w:p><w:pPr><w:pStyle w:val="Compact" /></w:pPr><w:r><w:t xml:space="preserve">Monolithic ERP</w:t></w:r></w:p></w:tc></w:tr><w:tr><w:tc><w:tcPr /><w:p><w:pPr><w:pStyle w:val="Compact" /></w:pPr><w:r><w:t xml:space="preserve">Waste Logics</w:t></w:r></w:p></w:tc><w:tc><w:tcPr /><w:p><w:pPr><w:pStyle w:val="Compact" /></w:pPr><w:r><w:t xml:space="preserve">Flexible Invoicing, Two-way Sync (Sage, QuickBooks, Xero), KPI Dashboards</w:t></w:r></w:p></w:tc><w:tc><w:tcPr /><w:p><w:pPr><w:pStyle w:val="Compact" /></w:pPr><w:r><w:t xml:space="preserve">REST (Accounting sync)</w:t></w:r></w:p></w:tc><w:tc><w:tcPr /><w:p><w:pPr><w:pStyle w:val="Compact" /></w:pPr><w:r><w:t xml:space="preserve">Cloud Microservices</w:t></w:r></w:p></w:tc></w:tr><w:tr><w:tc><w:tcPr /><w:p><w:pPr><w:pStyle w:val="Compact" /></w:pPr><w:r><w:t xml:space="preserve">Hauler Hero</w:t></w:r></w:p></w:tc><w:tc><w:tcPr /><w:p><w:pPr><w:pStyle w:val="Compact" /></w:pPr><w:r><w:t xml:space="preserve">Bulk Invoicing, Tiered Pricing, Payment Integration (TrashBolt), Dashboards</w:t></w:r></w:p></w:tc><w:tc><w:tcPr /><w:p><w:pPr><w:pStyle w:val="Compact" /></w:pPr><w:r><w:t xml:space="preserve">Public APIs (TrashBolt)</w:t></w:r></w:p></w:tc><w:tc><w:tcPr /><w:p><w:pPr><w:pStyle w:val="Compact" /></w:pPr><w:r><w:t xml:space="preserve">Microservices</w:t></w:r></w:p></w:tc></w:tr><w:tr><w:tc><w:tcPr /><w:p><w:pPr><w:pStyle w:val="Compact" /></w:pPr><w:r><w:t xml:space="preserve">Evreka</w:t></w:r></w:p></w:tc><w:tc><w:tcPr /><w:p><w:pPr><w:pStyle w:val="Compact" /></w:pPr><w:r><w:t xml:space="preserve">Contract Pricing, Auto-Invoice Generation, AR/AP, Optional Payroll</w:t></w:r></w:p></w:tc><w:tc><w:tcPr /><w:p><w:pPr><w:pStyle w:val="Compact" /></w:pPr><w:r><w:t xml:space="preserve">REST (ERP integration)</w:t></w:r></w:p></w:tc><w:tc><w:tcPr /><w:p><w:pPr><w:pStyle w:val="Compact" /></w:pPr><w:r><w:t xml:space="preserve">Cloud SaaS Modular</w:t></w:r></w:p></w:tc></w:tr><w:tr><w:tc><w:tcPr /><w:p><w:pPr><w:pStyle w:val="Compact" /></w:pPr><w:r><w:t xml:space="preserve">Sensoneo</w:t></w:r></w:p></w:tc><w:tc><w:tcPr /><w:p><w:pPr><w:pStyle w:val="Compact" /></w:pPr><w:r><w:t xml:space="preserve">N/A (Focuses on operations, billing handled externally)</w:t></w:r></w:p></w:tc><w:tc><w:tcPr /><w:p><w:pPr><w:pStyle w:val="Compact" /></w:pPr><w:r><w:t xml:space="preserve">N/A</w:t></w:r></w:p></w:tc><w:tc><w:tcPr /><w:p><w:pPr><w:pStyle w:val="Compact" /></w:pPr><w:r><w:t xml:space="preserve">Cloud IoT Platform</w:t></w:r></w:p></w:tc></w:tr><w:tr><w:tc><w:tcPr /><w:p><w:pPr><w:pStyle w:val="Compact" /></w:pPr><w:r><w:rPr><w:b /><w:bCs /></w:rPr><w:t xml:space="preserve">SmartBin</w:t></w:r></w:p></w:tc><w:tc><w:tcPr /><w:p><w:pPr><w:pStyle w:val="Compact" /></w:pPr><w:r><w:t xml:space="preserve">Subscriptions, Payroll, Expense Tracking, Real-time Analytics (planned)</w:t></w:r></w:p></w:tc><w:tc><w:tcPr /><w:p><w:pPr><w:pStyle w:val="Compact" /></w:pPr><w:r><w:t xml:space="preserve">RESTful API, Stripe (payments), Email (SendGrid for billing notifications)</w:t></w:r></w:p></w:tc><w:tc><w:tcPr /><w:p><w:pPr><w:pStyle w:val="Compact" /></w:pPr><w:r><w:t xml:space="preserve">MERN, Microservices-inspired</w:t></w:r></w:p></w:tc></w:tr></w:tbl>
    <w:bookmarkEnd w:id="31" />
    <w:bookmarkStart w:id="32" w:name="aim-and-objectives" />
    <w:p><w:pPr><w:pStyle w:val="Heading4" /></w:pPr><w:r><w:t xml:space="preserve">2.1.4 Aim and Objectives</w:t></w:r></w:p>
    <w:p><w:pPr><w:pStyle w:val="Compact" /><w:numPr><w:ilvl w:val="0" /><w:numId w:val="1016" /></w:numPr></w:pPr><w:r><w:t xml:space="preserve">Complete</w:t></w:r></w:p>
    <w:p><w:pPr><w:pStyle w:val="FirstParagraph" /></w:pPr><w:r><w:rPr><w:b /><w:bCs /></w:rPr><w:t xml:space="preserve">Aim:</w:t></w:r><w:r><w:br /></w:r><w:r><w:t xml:space="preserve">To develop a fully integrated web-based solution that centralizes and streamlines all waste management operations, replacing manual processes with a profitable, efficient, and scalable digital platform.</w:t></w:r></w:p>
    <w:p><w:pPr><w:pStyle w:val="BodyText" /></w:pPr><w:r><w:rPr><w:b /><w:bCs /></w:rPr><w:t xml:space="preserve">How the Objectives Lead to the Aim:</w:t></w:r></w:p>
    <w:p><w:pPr><w:numPr><w:ilvl w:val="0" /><w:numId w:val="1017" /></w:numPr></w:pPr><w:r><w:rPr><w:b /><w:bCs /></w:rPr><w:t xml:space="preserve">Establish a Robust Integrated Platform (Foundation)</w:t></w:r></w:p>
    <w:p><w:pPr><w:pStyle w:val="Compact" /><w:numPr><w:ilvl w:val="1" /><w:numId w:val="1018" /></w:numPr></w:pPr><w:r><w:t xml:space="preserve">Create an integrated platform architecture for seamless data flow and communication between all five modules.</w:t></w:r></w:p>
    <w:p><w:pPr><w:pStyle w:val="Compact" /><w:numPr><w:ilvl w:val="1" /><w:numId w:val="1018" /></w:numPr></w:pPr><w:r><w:t xml:space="preserve">Ensure cross-platform accessibility with responsive interfaces for desktop and mobile.</w:t></w:r></w:p>
    <w:p><w:pPr><w:pStyle w:val="Compact" /><w:numPr><w:ilvl w:val="1" /><w:numId w:val="1018" /></w:numPr></w:pPr><w:r><w:t xml:space="preserve">Implement comprehensive data analytics for actionable business intelligence.</w:t></w:r></w:p>
    <w:p><w:pPr><w:numPr><w:ilvl w:val="0" /><w:numId w:val="1000" /></w:numPr></w:pPr><w:r><w:rPr><w:i /><w:iCs /></w:rPr><w:t xml:space="preserve">These foundational objectives enable all other modules to work together efficiently, providing the backbone for a unified system.</w:t></w:r></w:p>
    <w:p><w:pPr><w:numPr><w:ilvl w:val="0" /><w:numId w:val="1017" /></w:numPr></w:pPr><w:r><w:rPr><w:b /><w:bCs /></w:rPr><w:t xml:space="preserve">Empower Users and Staff (User &amp; Staff Management)</w:t></w:r></w:p>
    <w:p><w:pPr><w:pStyle w:val="Compact" /><w:numPr><w:ilvl w:val="1" /><w:numId w:val="1019" /></w:numPr></w:pPr><w:r><w:t xml:space="preserve">Implement robust user profile management with CRUD operations and role-based authentication.</w:t></w:r></w:p>
    <w:p><w:pPr><w:pStyle w:val="Compact" /><w:numPr><w:ilvl w:val="1" /><w:numId w:val="1019" /></w:numPr></w:pPr><w:r><w:t xml:space="preserve">Develop dynamic dashboards for stakeholders (service history, pickups, notifications).</w:t></w:r></w:p>
    <w:p><w:pPr><w:pStyle w:val="Compact" /><w:numPr><w:ilvl w:val="1" /><w:numId w:val="1019" /></w:numPr></w:pPr><w:r><w:t xml:space="preserve">Create an integrated complaint handling module for timely resolution and escalation.</w:t></w:r></w:p>
    <w:p><w:pPr><w:pStyle w:val="Compact" /><w:numPr><w:ilvl w:val="1" /><w:numId w:val="1019" /></w:numPr></w:pPr><w:r><w:t xml:space="preserve">Build a staff performance management system with attendance tracking and incentives.</w:t></w:r></w:p>
    <w:p><w:pPr><w:numPr><w:ilvl w:val="0" /><w:numId w:val="1000" /></w:numPr></w:pPr><w:r><w:rPr><w:i /><w:iCs /></w:rPr><w:t xml:space="preserve">By empowering users and staff with secure, efficient tools and clear communication, the system increases operational visibility and satisfaction, which is essential for a centralized digital platform.</w:t></w:r></w:p>
    <w:p><w:pPr><w:numPr><w:ilvl w:val="0" /><w:numId w:val="1017" /></w:numPr></w:pPr><w:r><w:rPr><w:b /><w:bCs /></w:rPr><w:t xml:space="preserve">Optimize Financial Operations (Financial Management)</w:t></w:r></w:p>
    <w:p><w:pPr><w:pStyle w:val="Compact" /><w:numPr><w:ilvl w:val="1" /><w:numId w:val="1020" /></w:numPr></w:pPr><w:r><w:t xml:space="preserve">Develop a real-time financial dashboard with key performance indicators.</w:t></w:r></w:p>
    <w:p><w:pPr><w:pStyle w:val="Compact" /><w:numPr><w:ilvl w:val="1" /><w:numId w:val="1020" /></w:numPr></w:pPr><w:r><w:t xml:space="preserve">Implement a subscription management system (plan creation, billing, invoicing, payment tracking).</w:t></w:r></w:p>
    <w:p><w:pPr><w:pStyle w:val="Compact" /><w:numPr><w:ilvl w:val="1" /><w:numId w:val="1020" /></w:numPr></w:pPr><w:r><w:t xml:space="preserve">Create a payroll processing engine (salary, deductions, benefits).</w:t></w:r></w:p>
    <w:p><w:pPr><w:pStyle w:val="Compact" /><w:numPr><w:ilvl w:val="1" /><w:numId w:val="1020" /></w:numPr></w:pPr><w:r><w:t xml:space="preserve">Build comprehensive financial reporting tools (income, expenses, revenue analysis).</w:t></w:r></w:p>
    <w:p><w:pPr><w:numPr><w:ilvl w:val="0" /><w:numId w:val="1000" /></w:numPr></w:pPr><w:r><w:rPr><w:i /><w:iCs /></w:rPr><w:t xml:space="preserve">Efficient financial management ensures the platform is profitable and sustainable, directly supporting the aim of operational profitability.</w:t></w:r></w:p>
    <w:p><w:pPr><w:numPr><w:ilvl w:val="0" /><w:numId w:val="1017" /></w:numPr></w:pPr><w:r><w:rPr><w:b /><w:bCs /></w:rPr><w:t xml:space="preserve">Streamline Recycling and Pickup Processes (Recycling &amp; Pickup Request Management)</w:t></w:r></w:p>
    <w:p><w:pPr><w:pStyle w:val="Compact" /><w:numPr><w:ilvl w:val="1" /><w:numId w:val="1021" /></w:numPr></w:pPr><w:r><w:rPr><w:b /><w:bCs /></w:rPr><w:t xml:space="preserve">Recycling Management:</w:t></w:r></w:p>
    <w:p><w:pPr><w:pStyle w:val="Compact" /><w:numPr><w:ilvl w:val="2" /><w:numId w:val="1022" /></w:numPr></w:pPr><w:r><w:t xml:space="preserve">Create a searchable database of recyclable waste types with pricing.</w:t></w:r></w:p>
    <w:p><w:pPr><w:pStyle w:val="Compact" /><w:numPr><w:ilvl w:val="2" /><w:numId w:val="1022" /></w:numPr></w:pPr><w:r><w:t xml:space="preserve">Develop a user-friendly recycling request form.</w:t></w:r></w:p>
    <w:p><w:pPr><w:pStyle w:val="Compact" /><w:numPr><w:ilvl w:val="2" /><w:numId w:val="1022" /></w:numPr></w:pPr><w:r><w:t xml:space="preserve">Implement a secure payment system for recycling transactions.</w:t></w:r></w:p>
    <w:p><w:pPr><w:pStyle w:val="Compact" /><w:numPr><w:ilvl w:val="2" /><w:numId w:val="1022" /></w:numPr></w:pPr><w:r><w:t xml:space="preserve">Design a recycling activity dashboard for tracking requests and transactions.</w:t></w:r></w:p>
    <w:p><w:pPr><w:pStyle w:val="Compact" /><w:numPr><w:ilvl w:val="1" /><w:numId w:val="1021" /></w:numPr></w:pPr><w:r><w:rPr><w:b /><w:bCs /></w:rPr><w:t xml:space="preserve">Pickup Request Management:</w:t></w:r></w:p>
    <w:p><w:pPr><w:pStyle w:val="Compact" /><w:numPr><w:ilvl w:val="2" /><w:numId w:val="1023" /></w:numPr></w:pPr><w:r><w:t xml:space="preserve">Develop a pickup request submission system with location mapping and scheduling.</w:t></w:r></w:p>
    <w:p><w:pPr><w:pStyle w:val="Compact" /><w:numPr><w:ilvl w:val="2" /><w:numId w:val="1023" /></w:numPr></w:pPr><w:r><w:t xml:space="preserve">Implement real-time request tracking for users and admins.</w:t></w:r></w:p>
    <w:p><w:pPr><w:pStyle w:val="Compact" /><w:numPr><w:ilvl w:val="2" /><w:numId w:val="1023" /></w:numPr></w:pPr><w:r><w:t xml:space="preserve">Create route optimization algorithms based on requests and resources.</w:t></w:r></w:p>
    <w:p><w:pPr><w:pStyle w:val="Compact" /><w:numPr><w:ilvl w:val="2" /><w:numId w:val="1023" /></w:numPr></w:pPr><w:r><w:t xml:space="preserve">Design dynamic pricing calculations based on waste type, quantity, and location.</w:t></w:r></w:p>
    <w:p><w:pPr><w:numPr><w:ilvl w:val="0" /><w:numId w:val="1000" /></w:numPr></w:pPr><w:r><w:rPr><w:i /><w:iCs /></w:rPr><w:t xml:space="preserve">These objectives automate and optimize core business processes, reducing manual work and improving customer and recycler experience.</w:t></w:r></w:p>
    <w:p><w:pPr><w:numPr><w:ilvl w:val="0" /><w:numId w:val="1017" /></w:numPr></w:pPr><w:r><w:rPr><w:b /><w:bCs /></w:rPr><w:t xml:space="preserve">Maximize Resource Utilization (Schedule &amp; Resource Management)</w:t></w:r></w:p>
    <w:p><w:pPr><w:pStyle w:val="Compact" /><w:numPr><w:ilvl w:val="1" /><w:numId w:val="1024" /></w:numPr></w:pPr><w:r><w:t xml:space="preserve">Develop a resource scheduling module for trucks, equipment, and personnel.</w:t></w:r></w:p>
    <w:p><w:pPr><w:pStyle w:val="Compact" /><w:numPr><w:ilvl w:val="1" /><w:numId w:val="1024" /></w:numPr></w:pPr><w:r><w:t xml:space="preserve">Implement maintenance tracking and scheduling for vehicles/equipment.</w:t></w:r></w:p>
    <w:p><w:pPr><w:pStyle w:val="Compact" /><w:numPr><w:ilvl w:val="1" /><w:numId w:val="1024" /></w:numPr></w:pPr><w:r><w:t xml:space="preserve">Create real-time monitoring of routes and resource status.</w:t></w:r></w:p>
    <w:p><w:pPr><w:pStyle w:val="Compact" /><w:numPr><w:ilvl w:val="1" /><w:numId w:val="1024" /></w:numPr></w:pPr><w:r><w:t xml:space="preserve">Design data analytics for resource optimization and efficiency improvement.</w:t></w:r></w:p>
    <w:p><w:pPr><w:numPr><w:ilvl w:val="0" /><w:numId w:val="1000" /></w:numPr></w:pPr><w:r><w:rPr><w:i /><w:iCs /></w:rPr><w:t xml:space="preserve">Optimizing resources ensures the system is not only efficient but also scalable and reliable, supporting the overall aim.</w:t></w:r></w:p>
    <w:p><w:pPr><w:pStyle w:val="FirstParagraph" /></w:pPr><w:r><w:rPr><w:b /><w:bCs /></w:rPr><w:t xml:space="preserve">Summary Flow:</w:t></w:r><w:r><w:br /></w:r><w:r><w:t xml:space="preserve">&gt;</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:rPr><w:b /><w:bCs /></w:rPr><w:t xml:space="preserve">Integrated Platform</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:t xml:space="preserve">→</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:rPr><w:b /><w:bCs /></w:rPr><w:t xml:space="preserve">Empowered Users/Staff</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:t xml:space="preserve">→</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:rPr><w:b /><w:bCs /></w:rPr><w:t xml:space="preserve">Optimized Financials</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:t xml:space="preserve">→</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:rPr><w:b /><w:bCs /></w:rPr><w:t xml:space="preserve">Streamlined Recycling &amp; Pickup</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:t xml:space="preserve">→</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:rPr><w:b /><w:bCs /></w:rPr><w:t xml:space="preserve">Maximized Resources</w:t></w:r><w:r><w:br /></w:r><w:r><w:t xml:space="preserve">&gt;</w:t></w:r><w:r><w:br /></w:r><w:r><w:t xml:space="preserve">&gt;</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:rPr><w:b /><w:bCs /></w:rPr><w:t xml:space="preserve">All these together achieve the main aim: a centralized, efficient, and profitable digital waste management solution.</w:t></w:r></w:p>
    <w:bookmarkEnd w:id="32" />
    <w:bookmarkStart w:id="33" w:name="solution-overview" />
    <w:p><w:pPr><w:pStyle w:val="Heading4" /></w:pPr><w:r><w:t xml:space="preserve">2.1.5 Solution Overview</w:t></w:r></w:p>
    <w:p><w:pPr><w:pStyle w:val="Compact" /><w:numPr><w:ilvl w:val="0" /><w:numId w:val="1025" /></w:numPr></w:pPr><w:r><w:t xml:space="preserve">Complete</w:t></w:r></w:p>
    <w:p><w:pPr><w:pStyle w:val="FirstParagraph" /></w:pPr><w:r><w:t xml:space="preserve">The SmartBin Management System is designed as a comprehensive digital ecosystem that seamlessly integrates five core functional modules into a unified waste management platform. The system follows a modern client-server architecture that enables real-time data exchange between different stakeholders—customers, staff, administrators, financial managers, and recycling partners.</w:t></w:r></w:p>
    <w:p><w:pPr><w:pStyle w:val="BodyText" /></w:pPr><w:r><w:rPr><w:b /><w:bCs /></w:rPr><w:t xml:space="preserve">System Architecture</w:t></w:r></w:p>
    <w:p><w:pPr><w:pStyle w:val="BodyText" /></w:pPr><w:r><w:t xml:space="preserve">SmartBin employs a MERN stack architecture (MongoDB Atlas, Express.js, React, Node.js) with TypeScript for enhanced code reliability and maintainability.</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:rPr><w:i /><w:iCs /></w:rPr><w:t xml:space="preserve">Note: Some backend files are still in JavaScript as we are in the process of migrating the entire backend to TypeScript. This migration is nearly complete and will further improve code quality and consistency.</w:t></w:r></w:p>
    <w:p><w:pPr><w:numPr><w:ilvl w:val="0" /><w:numId w:val="1026" /></w:numPr></w:pPr><w:r><w:rPr><w:b /><w:bCs /></w:rPr><w:t xml:space="preserve">Frontend:</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:t xml:space="preserve">A React-based Single-Page Application (SPA) built with Vite and TypeScript that provides role-specific interfaces tailored to different user types. Material-UI components and responsive design ensure a consistent, mobile-friendly user experience.</w:t></w:r></w:p>
    <w:p><w:pPr><w:numPr><w:ilvl w:val="0" /><w:numId w:val="1026" /></w:numPr></w:pPr><w:r><w:rPr><w:b /><w:bCs /></w:rPr><w:t xml:space="preserve">Backend:</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:t xml:space="preserve">A Node.js/Express.js RESTful API server that handles business logic, data validation, and serves as the central hub for all operations. API endpoints are organized by module for clarity and maintainability.</w:t></w:r></w:p>
    <w:p><w:pPr><w:numPr><w:ilvl w:val="0" /><w:numId w:val="1026" /></w:numPr></w:pPr><w:r><w:rPr><w:b /><w:bCs /></w:rPr><w:t xml:space="preserve">Database:</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:t xml:space="preserve">MongoDB Atlas provides a flexible, document-oriented managed cloud database that efficiently stores diverse data types, from user profiles to financial transactions, with appropriate indexing for performance.</w:t></w:r></w:p>
    <w:p><w:pPr><w:numPr><w:ilvl w:val="0" /><w:numId w:val="1026" /></w:numPr></w:pPr><w:r><w:rPr><w:b /><w:bCs /></w:rPr><w:t xml:space="preserve">API Layer:</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:t xml:space="preserve">All modules communicate through a unified RESTful API, ensuring standardized data exchange with JSON payloads.</w:t></w:r></w:p>
    <w:p><w:pPr><w:numPr><w:ilvl w:val="0" /><w:numId w:val="1026" /></w:numPr></w:pPr><w:r><w:rPr><w:b /><w:bCs /></w:rPr><w:t xml:space="preserve">Integrations:</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:t xml:space="preserve">External service connections include Stripe for payment processing (financial management), Google Maps API for geolocation features, and SendGrid for email notifications.</w:t></w:r></w:p>
    <w:p><w:pPr><w:pStyle w:val="FirstParagraph" /></w:pPr><w:r><w:t xml:space="preserve">SmartBin System Architecture</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:rPr><w:i /><w:iCs /></w:rPr><w:t xml:space="preserve">Figure 1: SmartBin System Architecture Diagram</w:t></w:r></w:p>
    <w:p><w:pPr><w:pStyle w:val="BodyText" /></w:pPr><w:r><w:rPr><w:b /><w:bCs /></w:rPr><w:t xml:space="preserve">Core Functional Modules</w:t></w:r></w:p>
    <w:p><w:pPr><w:numPr><w:ilvl w:val="0" /><w:numId w:val="1027" /></w:numPr></w:pPr><w:r><w:rPr><w:b /><w:bCs /></w:rPr><w:t xml:space="preserve">User and Staff Management Module</w:t></w:r></w:p>
    <w:p><w:pPr><w:numPr><w:ilvl w:val="0" /><w:numId w:val="1000" /></w:numPr></w:pPr><w:r><w:t xml:space="preserve">Serves as the authentication and access control hub of the system. It manages secure user registration, role-based access control (RBAC), profile management, and complaint handling. This module verifies all system interactions and maintains appropriate permissions for each user type (admin, staff, customer, recycler). The MFA (Multi-Factor Authentication) feature enhances security for sensitive operations.</w:t></w:r></w:p>
    <w:p><w:pPr><w:numPr><w:ilvl w:val="0" /><w:numId w:val="1027" /></w:numPr></w:pPr><w:r><w:rPr><w:b /><w:bCs /></w:rPr><w:t xml:space="preserve">Financial Management Module</w:t></w:r></w:p>
    <w:p><w:pPr><w:numPr><w:ilvl w:val="0" /><w:numId w:val="1000" /></w:numPr></w:pPr><w:r><w:t xml:space="preserve">Handles all monetary transactions and financial operations. Drawing data from other modules, it manages subscription plans, generates invoices, processes payments, calculates staff payroll, and produces financial reports. Real-time dashboards provide visibility into key financial metrics for managers and administrators.</w:t></w:r></w:p>
    <w:p><w:pPr><w:numPr><w:ilvl w:val="0" /><w:numId w:val="1027" /></w:numPr></w:pPr><w:r><w:rPr><w:b /><w:bCs /></w:rPr><w:t xml:space="preserve">Recycling Management Module</w:t></w:r></w:p>
    <w:p><w:pPr><w:numPr><w:ilvl w:val="0" /><w:numId w:val="1000" /></w:numPr></w:pPr><w:r><w:t xml:space="preserve">Creates a marketplace connecting waste producers with recyclers. It enables administrators to list available waste materials and recyclers to submit purchase requests. The module manages the entire workflow from request submission through approval, payment, and delivery coordination.</w:t></w:r></w:p>
    <w:p><w:pPr><w:numPr><w:ilvl w:val="0" /><w:numId w:val="1027" /></w:numPr></w:pPr><w:r><w:rPr><w:b /><w:bCs /></w:rPr><w:t xml:space="preserve">Pickup Request Management Module</w:t></w:r></w:p>
    <w:p><w:pPr><w:numPr><w:ilvl w:val="0" /><w:numId w:val="1000" /></w:numPr></w:pPr><w:r><w:t xml:space="preserve">Facilitates customer-facing waste collection services. Customers can submit pickup requests with details like waste type, location, and preferred date. The system calculates pricing, tracks request status, and enables administrators to manage the approval workflow. Integration with the Schedule module ensures efficient resource allocation for pickups.</w:t></w:r></w:p>
    <w:p><w:pPr><w:numPr><w:ilvl w:val="0" /><w:numId w:val="1027" /></w:numPr></w:pPr><w:r><w:rPr><w:b /><w:bCs /></w:rPr><w:t xml:space="preserve">Schedule and Resource Management Module</w:t></w:r></w:p>
    <w:p><w:pPr><w:numPr><w:ilvl w:val="0" /><w:numId w:val="1000" /></w:numPr></w:pPr><w:r><w:t xml:space="preserve">Optimizes fleet operations and resource allocation. It manages trucks, equipment, and tools, assigns collection routes to staff, and tracks maintenance requirements. Administrators can create and monitor collection schedules, while drivers can view and update their assigned routes.</w:t></w:r></w:p>
    <w:p><w:pPr><w:pStyle w:val="FirstParagraph" /></w:pPr><w:r><w:rPr><w:b /><w:bCs /></w:rPr><w:t xml:space="preserve">Module Interaction Flow</w:t></w:r></w:p>
    <w:p><w:pPr><w:pStyle w:val="BodyText" /></w:pPr><w:r><w:t xml:space="preserve">The five core modules interact dynamically to provide a streamlined waste management experience:</w:t></w:r></w:p>
    <w:p><w:pPr><w:numPr><w:ilvl w:val="0" /><w:numId w:val="1028" /></w:numPr></w:pPr><w:r><w:rPr><w:b /><w:bCs /></w:rPr><w:t xml:space="preserve">User Authentication → Module Access:</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:t xml:space="preserve">All user interactions begin with authentication through the User Management module, which determines available features based on role.</w:t></w:r></w:p>
    <w:p><w:pPr><w:numPr><w:ilvl w:val="0" /><w:numId w:val="1028" /></w:numPr></w:pPr><w:r><w:rPr><w:b /><w:bCs /></w:rPr><w:t xml:space="preserve">Customer Request → Financial Processing:</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:t xml:space="preserve">When customers submit pickup or recycling requests, the Financial module calculates pricing and handles payment processing.</w:t></w:r></w:p>
    <w:p><w:pPr><w:numPr><w:ilvl w:val="0" /><w:numId w:val="1028" /></w:numPr></w:pPr><w:r><w:rPr><w:b /><w:bCs /></w:rPr><w:t xml:space="preserve">Approved Requests → Scheduling:</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:t xml:space="preserve">Approved pickup requests flow to the Schedule module for resource allocation and route planning.</w:t></w:r></w:p>
    <w:p><w:pPr><w:numPr><w:ilvl w:val="0" /><w:numId w:val="1028" /></w:numPr></w:pPr><w:r><w:rPr><w:b /><w:bCs /></w:rPr><w:t xml:space="preserve">Schedule Execution → Status Updates:</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:t xml:space="preserve">As staff complete scheduled routes, the Pickup Request module receives status updates that are visible to customers.</w:t></w:r></w:p>
    <w:p><w:pPr><w:numPr><w:ilvl w:val="0" /><w:numId w:val="1028" /></w:numPr></w:pPr><w:r><w:rPr><w:b /><w:bCs /></w:rPr><w:t xml:space="preserve">Completed Services → Financial Records:</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:t xml:space="preserve">Completed services trigger updates in the Financial module for billing, revenue tracking, and financial reporting.</w:t></w:r></w:p>
    <w:p><w:pPr><w:pStyle w:val="FirstParagraph" /></w:pPr><w:r><w:t xml:space="preserve">This integrated approach ensures data consistency, operational efficiency, and a seamless user experience across all aspects of the waste management process. All modules access a centralized MongoDB database through secure API endpoints, with external integration points for payment processing, geolocation services, and analytics capabilities.</w:t></w:r></w:p>
    <w:p><w:pPr><w:pStyle w:val="BodyText" /></w:pPr><w:r><w:rPr><w:b /><w:bCs /></w:rPr><w:t xml:space="preserve">Suggested Diagram Elements</w:t></w:r></w:p>
    <w:p><w:pPr><w:pStyle w:val="BodyText" /></w:pPr><w:r><w:t xml:space="preserve">For the system architecture diagram (Figure 1), it’s recommended to include:</w:t></w:r></w:p>
    <w:p><w:pPr><w:pStyle w:val="Compact" /><w:numPr><w:ilvl w:val="0" /><w:numId w:val="1029" /></w:numPr></w:pPr><w:r><w:t xml:space="preserve">Core modules with clear visual differentiation</w:t></w:r></w:p>
    <w:p><w:pPr><w:pStyle w:val="Compact" /><w:numPr><w:ilvl w:val="0" /><w:numId w:val="1029" /></w:numPr></w:pPr><w:r><w:t xml:space="preserve">Database layer and connections</w:t></w:r></w:p>
    <w:p><w:pPr><w:pStyle w:val="Compact" /><w:numPr><w:ilvl w:val="0" /><w:numId w:val="1029" /></w:numPr></w:pPr><w:r><w:t xml:space="preserve">Client interfaces for different user types</w:t></w:r></w:p>
    <w:p><w:pPr><w:pStyle w:val="Compact" /><w:numPr><w:ilvl w:val="0" /><w:numId w:val="1029" /></w:numPr></w:pPr><w:r><w:t xml:space="preserve">API gateway showing module interconnections</w:t></w:r></w:p>
    <w:p><w:pPr><w:pStyle w:val="Compact" /><w:numPr><w:ilvl w:val="0" /><w:numId w:val="1029" /></w:numPr></w:pPr><w:r><w:t xml:space="preserve">External integration points (payment, email, maps)</w:t></w:r></w:p>
    <w:p><w:pPr><w:pStyle w:val="Compact" /><w:numPr><w:ilvl w:val="0" /><w:numId w:val="1029" /></w:numPr></w:pPr><w:r><w:t xml:space="preserve">Data flow direction indicators</w:t></w:r></w:p>
    <w:p><w:pPr><w:pStyle w:val="FirstParagraph" /></w:pPr><w:r><w:t xml:space="preserve">This visual representation will help stakeholders understand how the various components work together to deliver a cohesive waste management solution.</w:t></w:r></w:p>
    <w:bookmarkEnd w:id="33" />
    <w:bookmarkStart w:id="34" w:name="methodology" />
    <w:p><w:pPr><w:pStyle w:val="Heading4" /></w:pPr><w:r><w:t xml:space="preserve">2.1.6 Methodology</w:t></w:r></w:p>
    <w:p><w:pPr><w:pStyle w:val="Compact" /><w:numPr><w:ilvl w:val="0" /><w:numId w:val="1030" /></w:numPr></w:pPr><w:r><w:t xml:space="preserve">Complete</w:t></w:r></w:p>
    <w:bookmarkEnd w:id="34" />
    <w:bookmarkStart w:id="35" w:name="the-structure-of-the-report" />
    <w:p><w:pPr><w:pStyle w:val="Heading4" /></w:pPr><w:r><w:t xml:space="preserve">2.1.7 The Structure of the Report</w:t></w:r></w:p>
    <w:p><w:pPr><w:pStyle w:val="Compact" /><w:numPr><w:ilvl w:val="0" /><w:numId w:val="1031" /></w:numPr></w:pPr><w:r><w:t xml:space="preserve">Complete</w:t></w:r></w:p>
    <w:p><w:pPr><w:pStyle w:val="BlockText" /></w:pPr><w:r><w:t xml:space="preserve">[!tip]</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:t xml:space="preserve">Try to provide an understanding of the flow of the rest of the report</w:t></w:r></w:p>
    <w:bookmarkEnd w:id="35" />
    <w:bookmarkStart w:id="37" w:name="a-clickable-link-to-the-git-repo" />
    <w:p><w:pPr><w:pStyle w:val="Heading4" /></w:pPr><w:r><w:t xml:space="preserve">2.1.8 A Clickable Link to the Git Repo</w:t></w:r></w:p>
    <w:p><w:pPr><w:pStyle w:val="Compact" /><w:numPr><w:ilvl w:val="0" /><w:numId w:val="1032" /></w:numPr></w:pPr><w:r><w:t xml:space="preserve">Complete</w:t></w:r></w:p>
    <w:p><w:pPr><w:pStyle w:val="BlockText" /></w:pPr><w:r><w:t xml:space="preserve">[!example]</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:t xml:space="preserve">Add your Git repository link here:</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:hyperlink r:id="rId36"><w:r><w:rPr><w:rStyle w:val="Hyperlink" /></w:rPr><w:t xml:space="preserve">Repository Name</w:t></w:r></w:hyperlink></w:p>
    <w:bookmarkEnd w:id="37" />
    <w:bookmarkEnd w:id="38" />
    <w:bookmarkStart w:id="39" w:name="chapter-02-requirements" />
    <w:p><w:pPr><w:pStyle w:val="Heading3" /></w:pPr><w:r><w:t xml:space="preserve">2.2 Chapter 02: Requirements</w:t></w:r></w:p>
    <w:p><w:pPr><w:pStyle w:val="Compact" /><w:numPr><w:ilvl w:val="0" /><w:numId w:val="1033" /></w:numPr></w:pPr><w:r><w:t xml:space="preserve">Complete</w:t></w:r></w:p>
    <w:p><w:pPr><w:pStyle w:val="FirstParagraph" /></w:pPr><w:r><w:t xml:space="preserve">This chapter outlines the requirements for the SmartBin system, covering stakeholder analysis, functional requirements including evolved and new features, non-functional requirements, technological constraints, and considerations for future extensibility. These requirements have been derived from initial proposals, progress evaluations, and an understanding of the urban Sri Lankan context, particularly Colombo.</w:t></w:r></w:p>
    <w:p><w:pPr><w:pStyle w:val="BodyText" /></w:pPr><w:r><w:rPr><w:b /><w:bCs /></w:rPr><w:t xml:space="preserve">Stakeholder Analysis</w:t></w:r></w:p>
    <w:p><w:pPr><w:pStyle w:val="BodyText" /></w:pPr><w:r><w:t xml:space="preserve">The primary stakeholders of the SmartBin system and their key expectations (with an aim for ~70% satisfaction by the current system) are identified as follows:</w:t></w:r></w:p>
    <w:p><w:pPr><w:pStyle w:val="Compact" /><w:numPr><w:ilvl w:val="0" /><w:numId w:val="1034" /></w:numPr></w:pPr><w:r><w:rPr><w:b /><w:bCs /></w:rPr><w:t xml:space="preserve">System Administrators:</w:t></w:r></w:p>
    <w:p><w:pPr><w:pStyle w:val="Compact" /><w:numPr><w:ilvl w:val="1" /><w:numId w:val="1035" /></w:numPr></w:pPr><w:r><w:rPr><w:b /><w:bCs /></w:rPr><w:t xml:space="preserve">Expectations:</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:t xml:space="preserve">Centralized dashboard for system monitoring (partially current, basic dashboard implemented, advanced real-time stats are future), robust user/staff management tools with audit trails (user management is current, audit trails are future), efficient system performance monitoring (basic monitoring in place, advanced tools are future), ability to manage system configurations and master data (e.g., waste types, pricing - current).</w:t></w:r></w:p>
    <w:p><w:pPr><w:pStyle w:val="Compact" /><w:numPr><w:ilvl w:val="1" /><w:numId w:val="1035" /></w:numPr></w:pPr><w:r><w:rPr><w:b /><w:bCs /></w:rPr><w:t xml:space="preserve">Priorities:</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:t xml:space="preserve">System uptime, data integrity, security, quick troubleshooting.</w:t></w:r></w:p>
    <w:p><w:pPr><w:pStyle w:val="Compact" /><w:numPr><w:ilvl w:val="0" /><w:numId w:val="1034" /></w:numPr></w:pPr><w:r><w:rPr><w:b /><w:bCs /></w:rPr><w:t xml:space="preserve">Operational Staff (Drivers, Collectors):</w:t></w:r></w:p>
    <w:p><w:pPr><w:pStyle w:val="Compact" /><w:numPr><w:ilvl w:val="1" /><w:numId w:val="1036" /></w:numPr></w:pPr><w:r><w:rPr><w:b /><w:bCs /></w:rPr><w:t xml:space="preserve">Expectations:</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:t xml:space="preserve">Clear, accessible daily routes and schedules (current, via web interface), easy method to mark tasks/pickups as complete (current), access to necessary customer/pickup details for their routes (current), fair workload distribution (system aims to support, actual fairness depends on admin scheduling), and a way to report basic on-route issues (basic complaint/feedback module can be used, dedicated on-route issue reporting is future).</w:t></w:r></w:p>
    <w:p><w:pPr><w:pStyle w:val="Compact" /><w:numPr><w:ilvl w:val="1" /><w:numId w:val="1036" /></w:numPr></w:pPr><w:r><w:rPr><w:b /><w:bCs /></w:rPr><w:t xml:space="preserve">Priorities:</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:t xml:space="preserve">Accurate route information, ease of use, safety.</w:t></w:r></w:p>
    <w:p><w:pPr><w:pStyle w:val="Compact" /><w:numPr><w:ilvl w:val="0" /><w:numId w:val="1034" /></w:numPr></w:pPr><w:r><w:rPr><w:b /><w:bCs /></w:rPr><w:t xml:space="preserve">Customers (Residential &amp; General Commercial):</w:t></w:r></w:p>
    <w:p><w:pPr><w:pStyle w:val="Compact" /><w:numPr><w:ilvl w:val="1" /><w:numId w:val="1037" /></w:numPr></w:pPr><w:r><w:rPr><w:b /><w:bCs /></w:rPr><w:t xml:space="preserve">Expectations:</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:t xml:space="preserve">Simple account registration and profile management (current), straightforward process for scheduling regular or on-demand pickups specifying common waste types (current), transparent pricing and access to billing/payment history (current), timely email notifications for service confirmations and status updates (current), ability to view pickup history (current, enhanced by new</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:t xml:space="preserve">‘My Service History export’</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:t xml:space="preserve">feature).</w:t></w:r></w:p>
    <w:p><w:pPr><w:pStyle w:val="Compact" /><w:numPr><w:ilvl w:val="1" /><w:numId w:val="1037" /></w:numPr></w:pPr><w:r><w:rPr><w:b /><w:bCs /></w:rPr><w:t xml:space="preserve">Priorities:</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:t xml:space="preserve">Convenience, reliability, clear communication, value for money.</w:t></w:r></w:p>
    <w:p><w:pPr><w:pStyle w:val="Compact" /><w:numPr><w:ilvl w:val="0" /><w:numId w:val="1034" /></w:numPr></w:pPr><w:r><w:rPr><w:b /><w:bCs /></w:rPr><w:t xml:space="preserve">Business Owners (Hotels, Restaurants, SMEs in Colombo - specialized Customer segment):</w:t></w:r></w:p>
    <w:p><w:pPr><w:pStyle w:val="Compact" /><w:numPr><w:ilvl w:val="1" /><w:numId w:val="1038" /></w:numPr></w:pPr><w:r><w:rPr><w:b /><w:bCs /></w:rPr><w:t xml:space="preserve">Expectations:</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:t xml:space="preserve">Reliable and timely waste collection (current, system designed for this), transparent and accurate billing with access to subscription/payment details (current), ability to request pickups for common commercial waste types (current), access to service history records for tracking and basic compliance (current, supported by</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:t xml:space="preserve">‘My Service History export’</w:t></w:r><w:r><w:t xml:space="preserve">). Unmet: advanced compliance reports, highly specialized waste handling options.</w:t></w:r></w:p>
    <w:p><w:pPr><w:pStyle w:val="Compact" /><w:numPr><w:ilvl w:val="1" /><w:numId w:val="1038" /></w:numPr></w:pPr><w:r><w:rPr><w:b /><w:bCs /></w:rPr><w:t xml:space="preserve">Priorities:</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:t xml:space="preserve">Uninterrupted service, cost-effectiveness, ease of basic compliance.</w:t></w:r></w:p>
    <w:p><w:pPr><w:pStyle w:val="Compact" /><w:numPr><w:ilvl w:val="0" /><w:numId w:val="1034" /></w:numPr></w:pPr><w:r><w:rPr><w:b /><w:bCs /></w:rPr><w:t xml:space="preserve">Recycling Partners:</w:t></w:r></w:p>
    <w:p><w:pPr><w:pStyle w:val="Compact" /><w:numPr><w:ilvl w:val="1" /><w:numId w:val="1039" /></w:numPr></w:pPr><w:r><w:rPr><w:b /><w:bCs /></w:rPr><w:t xml:space="preserve">Expectations:</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:t xml:space="preserve">Platform to register and manage their profile (current), ability to view available recyclable materials listed by admins (current), system to submit purchase requests (current), notifications on purchase request status (current). Unmet: detailed analytics on past purchases, integrated logistics for material collection.</w:t></w:r></w:p>
    <w:p><w:pPr><w:pStyle w:val="Compact" /><w:numPr><w:ilvl w:val="1" /><w:numId w:val="1039" /></w:numPr></w:pPr><w:r><w:rPr><w:b /><w:bCs /></w:rPr><w:t xml:space="preserve">Priorities:</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:t xml:space="preserve">Quality of materials, fair pricing, efficient transactions.</w:t></w:r></w:p>
    <w:p><w:pPr><w:pStyle w:val="Compact" /><w:numPr><w:ilvl w:val="0" /><w:numId w:val="1034" /></w:numPr></w:pPr><w:r><w:rPr><w:b /><w:bCs /></w:rPr><w:t xml:space="preserve">Financial Managers:</w:t></w:r></w:p>
    <w:p><w:pPr><w:pStyle w:val="Compact" /><w:numPr><w:ilvl w:val="1" /><w:numId w:val="1040" /></w:numPr></w:pPr><w:r><w:rPr><w:b /><w:bCs /></w:rPr><w:t xml:space="preserve">Expectations:</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:t xml:space="preserve">Tools to manage subscription plans (current), ability to oversee and generate invoices (current), system to track customer payments and manage outstanding balances (current), functionality to define salary plans and process payroll (current), access to generate financial reports (revenue, expenses, subscriptions - current). Unmet: advanced budgeting tools with variance analysis, direct integration with external accounting software.</w:t></w:r></w:p>
    <w:p><w:pPr><w:pStyle w:val="Compact" /><w:numPr><w:ilvl w:val="1" /><w:numId w:val="1040" /></w:numPr></w:pPr><w:r><w:rPr><w:b /><w:bCs /></w:rPr><w:t xml:space="preserve">Priorities:</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:t xml:space="preserve">Accuracy of financial data, automation, security, compliance.</w:t></w:r></w:p>
    <w:p><w:pPr><w:pStyle w:val="FirstParagraph" /></w:pPr><w:r><w:rPr><w:b /><w:bCs /></w:rPr><w:t xml:space="preserve">Functional Requirements</w:t></w:r></w:p>
    <w:p><w:pPr><w:pStyle w:val="BodyText" /></w:pPr><w:r><w:t xml:space="preserve">The SmartBin system is composed of five core modules. Key functional requirements, including recent evolutions and new additions, are detailed below:</w:t></w:r></w:p>
    <w:p><w:pPr><w:pStyle w:val="Compact" /><w:numPr><w:ilvl w:val="0" /><w:numId w:val="1041" /></w:numPr></w:pPr><w:r><w:rPr><w:b /><w:bCs /></w:rPr><w:t xml:space="preserve">User and Staff Management:</w:t></w:r></w:p>
    <w:p><w:pPr><w:pStyle w:val="Compact" /><w:numPr><w:ilvl w:val="1" /><w:numId w:val="1042" /></w:numPr></w:pPr><w:r><w:t xml:space="preserve">Secure user registration (Customer, Staff, Admin, Recycler) with profile management (CRUD operations).</w:t></w:r></w:p>
    <w:p><w:pPr><w:pStyle w:val="Compact" /><w:numPr><w:ilvl w:val="1" /><w:numId w:val="1042" /></w:numPr></w:pPr><w:r><w:t xml:space="preserve">Role-Based Access Control (RBAC) to ensure appropriate feature and data access.</w:t></w:r></w:p>
    <w:p><w:pPr><w:pStyle w:val="Compact" /><w:numPr><w:ilvl w:val="1" /><w:numId w:val="1042" /></w:numPr></w:pPr><w:r><w:t xml:space="preserve">User authentication with email/password and Multi-Factor Authentication (MFA).</w:t></w:r></w:p>
    <w:p><w:pPr><w:pStyle w:val="Compact" /><w:numPr><w:ilvl w:val="1" /><w:numId w:val="1042" /></w:numPr></w:pPr><w:r><w:t xml:space="preserve">Password recovery mechanism.</w:t></w:r></w:p>
    <w:p><w:pPr><w:pStyle w:val="Compact" /><w:numPr><w:ilvl w:val="1" /><w:numId w:val="1042" /></w:numPr></w:pPr><w:r><w:t xml:space="preserve">Staff attendance tracking (clock-in/out).</w:t></w:r></w:p>
    <w:p><w:pPr><w:pStyle w:val="Compact" /><w:numPr><w:ilvl w:val="1" /><w:numId w:val="1042" /></w:numPr></w:pPr><w:r><w:t xml:space="preserve">Staff performance monitoring (basic KPI tracking, advanced is future).</w:t></w:r></w:p>
    <w:p><w:pPr><w:pStyle w:val="Compact" /><w:numPr><w:ilvl w:val="1" /><w:numId w:val="1042" /></w:numPr></w:pPr><w:r><w:t xml:space="preserve">Integrated complaint/feedback submission and management system.</w:t></w:r></w:p>
    <w:p><w:pPr><w:pStyle w:val="Compact" /><w:numPr><w:ilvl w:val="1" /><w:numId w:val="1042" /></w:numPr></w:pPr><w:r><w:rPr><w:i /><w:iCs /></w:rPr><w:t xml:space="preserve">Evolved:</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:t xml:space="preserve">Automated service reminders and custom notifications (email/SMS) for users regarding pickups, payments, and service announcements.</w:t></w:r></w:p>
    <w:p><w:pPr><w:pStyle w:val="Compact" /><w:numPr><w:ilvl w:val="0" /><w:numId w:val="1041" /></w:numPr></w:pPr><w:r><w:rPr><w:b /><w:bCs /></w:rPr><w:t xml:space="preserve">Financial Management:</w:t></w:r></w:p>
    <w:p><w:pPr><w:pStyle w:val="Compact" /><w:numPr><w:ilvl w:val="1" /><w:numId w:val="1043" /></w:numPr></w:pPr><w:r><w:t xml:space="preserve">Subscription plan creation and management with flexible tiers.</w:t></w:r></w:p>
    <w:p><w:pPr><w:pStyle w:val="Compact" /><w:numPr><w:ilvl w:val="1" /><w:numId w:val="1043" /></w:numPr></w:pPr><w:r><w:t xml:space="preserve">Automated billing and invoicing based on subscriptions and services.</w:t></w:r></w:p>
    <w:p><w:pPr><w:pStyle w:val="Compact" /><w:numPr><w:ilvl w:val="1" /><w:numId w:val="1043" /></w:numPr></w:pPr><w:r><w:t xml:space="preserve">Payment processing integration (Stripe) and tracking for services.</w:t></w:r></w:p>
    <w:p><w:pPr><w:pStyle w:val="Compact" /><w:numPr><w:ilvl w:val="1" /><w:numId w:val="1043" /></w:numPr></w:pPr><w:r><w:t xml:space="preserve">Salary plan creation and payroll processing for staff.</w:t></w:r></w:p>
    <w:p><w:pPr><w:pStyle w:val="Compact" /><w:numPr><w:ilvl w:val="1" /><w:numId w:val="1043" /></w:numPr></w:pPr><w:r><w:t xml:space="preserve">Expense tracking and management (basic implementation, advanced budgeting is future).</w:t></w:r></w:p>
    <w:p><w:pPr><w:pStyle w:val="Compact" /><w:numPr><w:ilvl w:val="1" /><w:numId w:val="1043" /></w:numPr></w:pPr><w:r><w:t xml:space="preserve">Real-time financial dashboard displaying key KPIs (revenue, expenses, subscriptions).</w:t></w:r></w:p>
    <w:p><w:pPr><w:pStyle w:val="Compact" /><w:numPr><w:ilvl w:val="1" /><w:numId w:val="1043" /></w:numPr></w:pPr><w:r><w:t xml:space="preserve">Generation of financial reports (income, expenses, revenue analysis).</w:t></w:r></w:p>
    <w:p><w:pPr><w:pStyle w:val="Compact" /><w:numPr><w:ilvl w:val="1" /><w:numId w:val="1043" /></w:numPr></w:pPr><w:r><w:rPr><w:i /><w:iCs /></w:rPr><w:t xml:space="preserve">New:</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:t xml:space="preserve">Customers can export their service/payment history for personal records.</w:t></w:r></w:p>
    <w:p><w:pPr><w:pStyle w:val="Compact" /><w:numPr><w:ilvl w:val="0" /><w:numId w:val="1041" /></w:numPr></w:pPr><w:r><w:rPr><w:b /><w:bCs /></w:rPr><w:t xml:space="preserve">Recycling Management:</w:t></w:r></w:p>
    <w:p><w:pPr><w:pStyle w:val="Compact" /><w:numPr><w:ilvl w:val="1" /><w:numId w:val="1044" /></w:numPr></w:pPr><w:r><w:t xml:space="preserve">Admin interface to list recyclable waste materials for sale (type, quantity, price).</w:t></w:r></w:p>
    <w:p><w:pPr><w:pStyle w:val="Compact" /><w:numPr><w:ilvl w:val="1" /><w:numId w:val="1044" /></w:numPr></w:pPr><w:r><w:t xml:space="preserve">Recycler interface to browse and submit purchase requests for materials.</w:t></w:r></w:p>
    <w:p><w:pPr><w:pStyle w:val="Compact" /><w:numPr><w:ilvl w:val="1" /><w:numId w:val="1044" /></w:numPr></w:pPr><w:r><w:t xml:space="preserve">Admin approval/rejection workflow for purchase requests.</w:t></w:r></w:p>
    <w:p><w:pPr><w:pStyle w:val="Compact" /><w:numPr><w:ilvl w:val="1" /><w:numId w:val="1044" /></w:numPr></w:pPr><w:r><w:t xml:space="preserve">Secure payment system for recycling transactions.</w:t></w:r></w:p>
    <w:p><w:pPr><w:pStyle w:val="Compact" /><w:numPr><w:ilvl w:val="1" /><w:numId w:val="1044" /></w:numPr></w:pPr><w:r><w:t xml:space="preserve">Dashboard for recyclers and admins to track recycling requests and transaction history.</w:t></w:r></w:p>
    <w:p><w:pPr><w:pStyle w:val="Compact" /><w:numPr><w:ilvl w:val="0" /><w:numId w:val="1041" /></w:numPr></w:pPr><w:r><w:rPr><w:b /><w:bCs /></w:rPr><w:t xml:space="preserve">Pickup Request Management:</w:t></w:r></w:p>
    <w:p><w:pPr><w:pStyle w:val="Compact" /><w:numPr><w:ilvl w:val="1" /><w:numId w:val="1045" /></w:numPr></w:pPr><w:r><w:t xml:space="preserve">Customer interface to submit garbage pickup requests (name, contact, email, community, waste type, preferred date, address, location via map).</w:t></w:r></w:p>
    <w:p><w:pPr><w:pStyle w:val="Compact" /><w:numPr><w:ilvl w:val="1" /><w:numId w:val="1045" /></w:numPr></w:pPr><w:r><w:t xml:space="preserve">Dynamic calculation of pickup fees based on waste type, quantity, and location.</w:t></w:r></w:p>
    <w:p><w:pPr><w:pStyle w:val="Compact" /><w:numPr><w:ilvl w:val="1" /><w:numId w:val="1045" /></w:numPr></w:pPr><w:r><w:t xml:space="preserve">Admin interface to view, manage (approve/reject/update status), and assign pickup requests.</w:t></w:r></w:p>
    <w:p><w:pPr><w:pStyle w:val="Compact" /><w:numPr><w:ilvl w:val="1" /><w:numId w:val="1045" /></w:numPr></w:pPr><w:r><w:t xml:space="preserve">Real-time status tracking for pickup requests (Pending, Approved, On Progress, Completed, Cancelled).</w:t></w:r></w:p>
    <w:p><w:pPr><w:pStyle w:val="Compact" /><w:numPr><w:ilvl w:val="1" /><w:numId w:val="1045" /></w:numPr></w:pPr><w:r><w:t xml:space="preserve">Automated email confirmations and status updates to users.</w:t></w:r></w:p>
    <w:p><w:pPr><w:pStyle w:val="Compact" /><w:numPr><w:ilvl w:val="1" /><w:numId w:val="1045" /></w:numPr></w:pPr><w:r><w:t xml:space="preserve">Advanced search functionality for pickup requests (user and admin).</w:t></w:r></w:p>
    <w:p><w:pPr><w:pStyle w:val="Compact" /><w:numPr><w:ilvl w:val="1" /><w:numId w:val="1045" /></w:numPr></w:pPr><w:r><w:rPr><w:i /><w:iCs /></w:rPr><w:t xml:space="preserve">New:</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:t xml:space="preserve">Simple customer feedback/rating system post-pickup completion.</w:t></w:r></w:p>
    <w:p><w:pPr><w:pStyle w:val="Compact" /><w:numPr><w:ilvl w:val="0" /><w:numId w:val="1041" /></w:numPr></w:pPr><w:r><w:rPr><w:b /><w:bCs /></w:rPr><w:t xml:space="preserve">Schedule and Resource Management:</w:t></w:r></w:p>
    <w:p><w:pPr><w:pStyle w:val="Compact" /><w:numPr><w:ilvl w:val="1" /><w:numId w:val="1046" /></w:numPr></w:pPr><w:r><w:t xml:space="preserve">Admin interface to create and manage collection routes and schedules.</w:t></w:r></w:p>
    <w:p><w:pPr><w:pStyle w:val="Compact" /><w:numPr><w:ilvl w:val="1" /><w:numId w:val="1046" /></w:numPr></w:pPr><w:r><w:t xml:space="preserve">Assignment of routes to specific drivers/collection teams and vehicles.</w:t></w:r></w:p>
    <w:p><w:pPr><w:pStyle w:val="Compact" /><w:numPr><w:ilvl w:val="1" /><w:numId w:val="1046" /></w:numPr></w:pPr><w:r><w:t xml:space="preserve">Management of resources: trucks, tools, equipment (registration, status tracking - Active, Maintenance).</w:t></w:r></w:p>
    <w:p><w:pPr><w:pStyle w:val="Compact" /><w:numPr><w:ilvl w:val="1" /><w:numId w:val="1046" /></w:numPr></w:pPr><w:r><w:t xml:space="preserve">Driver interface to view assigned routes and mark pickups as completed.</w:t></w:r></w:p>
    <w:p><w:pPr><w:pStyle w:val="Compact" /><w:numPr><w:ilvl w:val="1" /><w:numId w:val="1046" /></w:numPr></w:pPr><w:r><w:t xml:space="preserve">Basic real-time monitoring of route progress (map view showing vehicle locations - basic implementation, advanced real-time tracking is future).</w:t></w:r></w:p>
    <w:p><w:pPr><w:pStyle w:val="Compact" /><w:numPr><w:ilvl w:val="1" /><w:numId w:val="1046" /></w:numPr></w:pPr><w:r><w:t xml:space="preserve">Maintenance tracking and scheduling for vehicles and equipment (basic implementation).</w:t></w:r></w:p>
    <w:p><w:pPr><w:pStyle w:val="FirstParagraph" /></w:pPr><w:r><w:rPr><w:b /><w:bCs /></w:rPr><w:t xml:space="preserve">Non-Functional Requirements (NFRs)</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:t xml:space="preserve">Key NFRs for the SmartBin system include:</w:t></w:r></w:p>
    <w:p><w:pPr><w:pStyle w:val="Compact" /><w:numPr><w:ilvl w:val="0" /><w:numId w:val="1047" /></w:numPr></w:pPr><w:r><w:rPr><w:b /><w:bCs /></w:rPr><w:t xml:space="preserve">Security:</w:t></w:r></w:p>
    <w:p><w:pPr><w:pStyle w:val="Compact" /><w:numPr><w:ilvl w:val="1" /><w:numId w:val="1048" /></w:numPr></w:pPr><w:r><w:t xml:space="preserve">Data encryption in transit (TLS/SSL) and at rest.</w:t></w:r></w:p>
    <w:p><w:pPr><w:pStyle w:val="Compact" /><w:numPr><w:ilvl w:val="1" /><w:numId w:val="1048" /></w:numPr></w:pPr><w:r><w:t xml:space="preserve">Robust authentication (MFA) and authorization (RBAC).</w:t></w:r></w:p>
    <w:p><w:pPr><w:pStyle w:val="Compact" /><w:numPr><w:ilvl w:val="1" /><w:numId w:val="1048" /></w:numPr></w:pPr><w:r><w:t xml:space="preserve">Protection against common web vulnerabilities (e.g., XSS, SQL Injection - though NoSQL is used, principles apply).</w:t></w:r></w:p>
    <w:p><w:pPr><w:pStyle w:val="Compact" /><w:numPr><w:ilvl w:val="1" /><w:numId w:val="1048" /></w:numPr></w:pPr><w:r><w:t xml:space="preserve">Regular security audits and penetration testing (planned for future).</w:t></w:r></w:p>
    <w:p><w:pPr><w:pStyle w:val="Compact" /><w:numPr><w:ilvl w:val="1" /><w:numId w:val="1048" /></w:numPr></w:pPr><w:r><w:t xml:space="preserve">Compliance with relevant data protection regulations (e.g., Sri Lankan PDPA if applicable).</w:t></w:r></w:p>
    <w:p><w:pPr><w:pStyle w:val="Compact" /><w:numPr><w:ilvl w:val="1" /><w:numId w:val="1048" /></w:numPr></w:pPr><w:r><w:rPr><w:i /><w:iCs /></w:rPr><w:t xml:space="preserve">Evolved:</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:t xml:space="preserve">Role-based limitations on data export features to prevent unauthorized bulk data extraction.</w:t></w:r></w:p>
    <w:p><w:pPr><w:pStyle w:val="Compact" /><w:numPr><w:ilvl w:val="0" /><w:numId w:val="1047" /></w:numPr></w:pPr><w:r><w:rPr><w:b /><w:bCs /></w:rPr><w:t xml:space="preserve">Performance:</w:t></w:r></w:p>
    <w:p><w:pPr><w:pStyle w:val="Compact" /><w:numPr><w:ilvl w:val="1" /><w:numId w:val="1049" /></w:numPr></w:pPr><w:r><w:t xml:space="preserve">Average response time under 3 seconds for standard operations.</w:t></w:r></w:p>
    <w:p><w:pPr><w:pStyle w:val="Compact" /><w:numPr><w:ilvl w:val="1" /><w:numId w:val="1049" /></w:numPr></w:pPr><w:r><w:t xml:space="preserve">Support for an initial concurrent user load of 500, scalable to 2000+.</w:t></w:r></w:p>
    <w:p><w:pPr><w:pStyle w:val="Compact" /><w:numPr><w:ilvl w:val="1" /><w:numId w:val="1049" /></w:numPr></w:pPr><w:r><w:t xml:space="preserve">99.5% system uptime during operational hours.</w:t></w:r></w:p>
    <w:p><w:pPr><w:pStyle w:val="Compact" /><w:numPr><w:ilvl w:val="1" /><w:numId w:val="1049" /></w:numPr></w:pPr><w:r><w:t xml:space="preserve">Efficient data loading and querying, especially for dashboards and reports.</w:t></w:r></w:p>
    <w:p><w:pPr><w:pStyle w:val="Compact" /><w:numPr><w:ilvl w:val="0" /><w:numId w:val="1047" /></w:numPr></w:pPr><w:r><w:rPr><w:b /><w:bCs /></w:rPr><w:t xml:space="preserve">Usability:</w:t></w:r></w:p>
    <w:p><w:pPr><w:pStyle w:val="Compact" /><w:numPr><w:ilvl w:val="1" /><w:numId w:val="1050" /></w:numPr></w:pPr><w:r><w:t xml:space="preserve">Intuitive and user-friendly interface requiring minimal training for all user roles.</w:t></w:r></w:p>
    <w:p><w:pPr><w:pStyle w:val="Compact" /><w:numPr><w:ilvl w:val="1" /><w:numId w:val="1050" /></w:numPr></w:pPr><w:r><w:t xml:space="preserve">Responsive design for accessibility across desktops, tablets, and mobile devices.</w:t></w:r></w:p>
    <w:p><w:pPr><w:pStyle w:val="Compact" /><w:numPr><w:ilvl w:val="1" /><w:numId w:val="1050" /></w:numPr></w:pPr><w:r><w:t xml:space="preserve">Clear error messaging and user feedback.</w:t></w:r></w:p>
    <w:p><w:pPr><w:pStyle w:val="Compact" /><w:numPr><w:ilvl w:val="1" /><w:numId w:val="1050" /></w:numPr></w:pPr><w:r><w:t xml:space="preserve">Accessibility compliance (aiming for WCAG 2.1 AA standards where feasible).</w:t></w:r></w:p>
    <w:p><w:pPr><w:pStyle w:val="Compact" /><w:numPr><w:ilvl w:val="0" /><w:numId w:val="1047" /></w:numPr></w:pPr><w:r><w:rPr><w:b /><w:bCs /></w:rPr><w:t xml:space="preserve">Scalability:</w:t></w:r></w:p>
    <w:p><w:pPr><w:pStyle w:val="Compact" /><w:numPr><w:ilvl w:val="1" /><w:numId w:val="1051" /></w:numPr></w:pPr><w:r><w:t xml:space="preserve">Horizontally scalable architecture to accommodate business growth and increasing data volume.</w:t></w:r></w:p>
    <w:p><w:pPr><w:pStyle w:val="Compact" /><w:numPr><w:ilvl w:val="1" /><w:numId w:val="1051" /></w:numPr></w:pPr><w:r><w:t xml:space="preserve">Ability to add new service areas, customer segments, and features without major redesign.</w:t></w:r></w:p>
    <w:p><w:pPr><w:pStyle w:val="Compact" /><w:numPr><w:ilvl w:val="0" /><w:numId w:val="1047" /></w:numPr></w:pPr><w:r><w:rPr><w:b /><w:bCs /></w:rPr><w:t xml:space="preserve">Reliability:</w:t></w:r></w:p>
    <w:p><w:pPr><w:pStyle w:val="Compact" /><w:numPr><w:ilvl w:val="1" /><w:numId w:val="1052" /></w:numPr></w:pPr><w:r><w:t xml:space="preserve">Robust error handling and system recovery mechanisms.</w:t></w:r></w:p>
    <w:p><w:pPr><w:pStyle w:val="Compact" /><w:numPr><w:ilvl w:val="1" /><w:numId w:val="1052" /></w:numPr></w:pPr><w:r><w:t xml:space="preserve">Regular data backups (MongoDB Atlas managed backups) and disaster recovery procedures.</w:t></w:r></w:p>
    <w:p><w:pPr><w:pStyle w:val="Compact" /><w:numPr><w:ilvl w:val="1" /><w:numId w:val="1052" /></w:numPr></w:pPr><w:r><w:t xml:space="preserve">Graceful degradation during partial system failures where possible.</w:t></w:r></w:p>
    <w:p><w:pPr><w:pStyle w:val="Compact" /><w:numPr><w:ilvl w:val="0" /><w:numId w:val="1047" /></w:numPr></w:pPr><w:r><w:rPr><w:b /><w:bCs /></w:rPr><w:t xml:space="preserve">Maintainability:</w:t></w:r></w:p>
    <w:p><w:pPr><w:pStyle w:val="Compact" /><w:numPr><w:ilvl w:val="1" /><w:numId w:val="1053" /></w:numPr></w:pPr><w:r><w:t xml:space="preserve">Modular architecture (microservices-inspired) allowing independent updates.</w:t></w:r></w:p>
    <w:p><w:pPr><w:pStyle w:val="Compact" /><w:numPr><w:ilvl w:val="1" /><w:numId w:val="1053" /></w:numPr></w:pPr><w:r><w:t xml:space="preserve">Well-documented code and APIs.</w:t></w:r></w:p>
    <w:p><w:pPr><w:pStyle w:val="Compact" /><w:numPr><w:ilvl w:val="1" /><w:numId w:val="1053" /></w:numPr></w:pPr><w:r><w:t xml:space="preserve">Adherence to consistent coding standards (TypeScript migration in progress to aid this).</w:t></w:r></w:p>
    <w:p><w:pPr><w:pStyle w:val="Compact" /><w:numPr><w:ilvl w:val="1" /><w:numId w:val="1053" /></w:numPr></w:pPr><w:r><w:t xml:space="preserve">Automated testing (unit and integration tests planned for broader coverage).</w:t></w:r></w:p>
    <w:p><w:pPr><w:pStyle w:val="FirstParagraph" /></w:pPr><w:r><w:rPr><w:b /><w:bCs /></w:rPr><w:t xml:space="preserve">Technological Constraints</w:t></w:r></w:p>
    <w:p><w:pPr><w:pStyle w:val="Compact" /><w:numPr><w:ilvl w:val="0" /><w:numId w:val="1054" /></w:numPr></w:pPr><w:r><w:rPr><w:b /><w:bCs /></w:rPr><w:t xml:space="preserve">Ongoing TypeScript Migration:</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:t xml:space="preserve">The backend is currently undergoing a migration from JavaScript to TypeScript. While nearly complete, this ongoing process might temporarily affect development velocity for new backend features and requires careful management to ensure consistency.</w:t></w:r></w:p>
    <w:p><w:pPr><w:pStyle w:val="Compact" /><w:numPr><w:ilvl w:val="0" /><w:numId w:val="1054" /></w:numPr></w:pPr><w:r><w:rPr><w:b /><w:bCs /></w:rPr><w:t xml:space="preserve">Third-Party API Dependencies:</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:t xml:space="preserve">The system relies on external services such as Stripe (payments), SendGrid (email), and Google Maps API (geolocation). Any changes in their availability, terms of service, pricing, or API specifications could impact SmartBin’s functionality or operational costs, requiring adaptive measures.</w:t></w:r></w:p>
    <w:p><w:pPr><w:pStyle w:val="FirstParagraph" /></w:pPr><w:r><w:rPr><w:b /><w:bCs /></w:rPr><w:t xml:space="preserve">Future Extensibility</w:t></w:r></w:p>
    <w:p><w:pPr><w:pStyle w:val="BodyText" /></w:pPr><w:r><w:t xml:space="preserve">The SmartBin system is designed with future growth in mind. Key areas identified for potential future extensions include:</w:t></w:r></w:p>
    <w:p><w:pPr><w:pStyle w:val="Compact" /><w:numPr><w:ilvl w:val="0" /><w:numId w:val="1055" /></w:numPr></w:pPr><w:r><w:rPr><w:b /><w:bCs /></w:rPr><w:t xml:space="preserve">Gamification and Community Engagement Module:</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:t xml:space="preserve">To enhance user engagement, particularly for residential customers, by introducing points, badges, and community leaderboards for activities like consistent recycling, timely payments, or providing helpful feedback. This can foster a sense of community and encourage positive waste management habits.</w:t></w:r></w:p>
    <w:p><w:pPr><w:pStyle w:val="Compact" /><w:numPr><w:ilvl w:val="0" /><w:numId w:val="1055" /></w:numPr></w:pPr><w:r><w:rPr><w:b /><w:bCs /></w:rPr><w:t xml:space="preserve">Direct Integration with IoT Smart Bins:</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:t xml:space="preserve">The architecture, especially the Pickup Request and Scheduling modules, will be prepared with APIs to potentially integrate data from IoT-enabled smart bins in the future. This would allow for features like fill-level monitoring, triggering automatic pickup requests, and further optimizing collection routes based on real-time bin status.</w:t></w:r></w:p>
    <w:p><w:pPr><w:pStyle w:val="FirstParagraph" /></w:pPr><w:r><w:t xml:space="preserve">Requirement modeling diagrams (e.g., Use Case Diagrams for key interactions, a high-level Data Flow Diagram) will be included in Chapter 3 (Design and Development) to visually represent these requirements.</w:t></w:r></w:p>
    <w:bookmarkEnd w:id="39" />
    <w:bookmarkStart w:id="40" w:name="chapter-03-design-and-development" />
    <w:p><w:pPr><w:pStyle w:val="Heading3" /></w:pPr><w:r><w:t xml:space="preserve">2.3 Chapter 03: Design and Development</w:t></w:r></w:p>
    <w:p><w:pPr><w:pStyle w:val="Compact" /><w:numPr><w:ilvl w:val="0" /><w:numId w:val="1056" /></w:numPr></w:pPr><w:r><w:t xml:space="preserve">Complete</w:t></w:r></w:p>
    <w:p><w:pPr><w:pStyle w:val="FirstParagraph" /></w:pPr><w:r><w:t xml:space="preserve">This chapter details the design and development aspects of the SmartBin system, covering its architecture, backend and frontend implementation, database design, and key technological choices. The system is engineered to be modular, scalable, and maintainable, leveraging the MERN stack with TypeScript.</w:t></w:r></w:p>
    <w:p><w:pPr><w:pStyle w:val="BodyText" /></w:pPr><w:r><w:rPr><w:b /><w:bCs /></w:rPr><w:t xml:space="preserve">I. Overall System Architecture &amp; Design Philosophy</w:t></w:r></w:p>
    <w:p><w:pPr><w:pStyle w:val="BodyText" /></w:pPr><w:r><w:rPr><w:b /><w:bCs /></w:rPr><w:t xml:space="preserve">1. High-Level Architecture</w:t></w:r></w:p>
    <w:p><w:pPr><w:pStyle w:val="BodyText" /></w:pPr><w:r><w:t xml:space="preserve">SmartBin employs a</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:rPr><w:b /><w:bCs /></w:rPr><w:t xml:space="preserve">client-server architecture</w:t></w:r><w:r><w:t xml:space="preserve">. The frontend, built as a Single-Page Application (SPA), interacts with a backend RESTful API server. This API server handles all business logic, data processing, and communication with the MongoDB Atlas database. External services for payments (Stripe), email notifications (SendGrid), and geolocation (Google Maps API) are integrated via the backend.</w:t></w:r></w:p>
    <w:p><w:pPr><w:pStyle w:val="BodyText" /></w:pPr><w:r><w:rPr><w:i /><w:iCs /></w:rPr><w:t xml:space="preserve">(Suggested Description for your System Architecture Diagram - Figure 3.1):</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:rPr><w:i /><w:iCs /></w:rPr><w:t xml:space="preserve">The diagram should depict the following components and interactions:</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:t xml:space="preserve">*</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:rPr><w:i /><w:iCs /></w:rPr><w:t xml:space="preserve">User Interfaces (Clients): Web browsers (desktop/mobile) accessing the React Frontend.</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:t xml:space="preserve">*</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:rPr><w:i /><w:iCs /></w:rPr><w:t xml:space="preserve">Frontend (React SPA with Vite &amp; TypeScript): Contains UI components, handles user interaction, manages client-side state, and makes API calls.</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:t xml:space="preserve">*</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:rPr><w:i /><w:iCs /></w:rPr><w:t xml:space="preserve">API Gateway/Backend Server (Node.js/Express.js with TypeScript): Exposes RESTful API endpoints, handles request validation, authentication/authorization, business logic execution, and orchestrates communication with the database and external services.</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:t xml:space="preserve">*</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:rPr><w:i /><w:iCs /></w:rPr><w:t xml:space="preserve">Database (MongoDB Atlas): Stores all application data including user profiles, service requests, financial records, schedules, etc.</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:t xml:space="preserve">*</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:rPr><w:i /><w:iCs /></w:rPr><w:t xml:space="preserve">External Services: Stripe (for payments), SendGrid (for email notifications), Google Maps API (for geolocation). Arrows should show these services being called by the Backend Server.</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:t xml:space="preserve">*</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:rPr><w:i /><w:iCs /></w:rPr><w:t xml:space="preserve">Key Data Flows: Arrows indicating request/response flow from Frontend to Backend, and Backend to Database/External Services.</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:t xml:space="preserve">*</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:rPr><w:i /><w:iCs /></w:rPr><w:t xml:space="preserve">Security Layers: Mention of HTTPS, JWT, MFA around relevant components.</w:t></w:r></w:p>
    <w:p><w:pPr><w:pStyle w:val="BodyText" /></w:pPr><w:r><w:rPr><w:b /><w:bCs /></w:rPr><w:t xml:space="preserve">2. Design Patterns &amp; Architectural Style</w:t></w:r></w:p>
    <w:p><w:pPr><w:pStyle w:val="Compact" /><w:numPr><w:ilvl w:val="0" /><w:numId w:val="1057" /></w:numPr></w:pPr><w:r><w:rPr><w:b /><w:bCs /></w:rPr><w:t xml:space="preserve">Backend:</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:t xml:space="preserve">The backend follows a</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:rPr><w:b /><w:bCs /></w:rPr><w:t xml:space="preserve">modular, service-oriented approach</w:t></w:r><w:r><w:t xml:space="preserve">. Code is organized into</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:rPr><w:rStyle w:val="VerbatimChar" /></w:rPr><w:t xml:space="preserve">routes</w:t></w:r><w:r><w:t xml:space="preserve">,</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:rPr><w:rStyle w:val="VerbatimChar" /></w:rPr><w:t xml:space="preserve">controllers</w:t></w:r><w:r><w:t xml:space="preserve">,</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:rPr><w:rStyle w:val="VerbatimChar" /></w:rPr><w:t xml:space="preserve">services</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:t xml:space="preserve">(though a dedicated top-level</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:rPr><w:rStyle w:val="VerbatimChar" /></w:rPr><w:t xml:space="preserve">services</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:t xml:space="preserve">folder isn’t in</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:rPr><w:rStyle w:val="VerbatimChar" /></w:rPr><w:t xml:space="preserve">src</w:t></w:r><w:r><w:t xml:space="preserve">, the logic is separated within controllers or utility modules), and</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:rPr><w:rStyle w:val="VerbatimChar" /></w:rPr><w:t xml:space="preserve">models</w:t></w:r><w:r><w:t xml:space="preserve">, promoting separation of concerns. This structure is akin to a</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:rPr><w:b /><w:bCs /></w:rPr><w:t xml:space="preserve">modular monolith</w:t></w:r><w:r><w:t xml:space="preserve">, designed with clear boundaries that could allow future evolution towards microservices if scalability demands it. Error handling is centralized using custom error classes (</w:t></w:r><w:r><w:rPr><w:rStyle w:val="VerbatimChar" /></w:rPr><w:t xml:space="preserve">AppError</w:t></w:r><w:r><w:t xml:space="preserve">) and dedicated middleware (</w:t></w:r><w:r><w:rPr><w:rStyle w:val="VerbatimChar" /></w:rPr><w:t xml:space="preserve">errorHandler</w:t></w:r><w:r><w:t xml:space="preserve">). Authentication and authorization are managed via specialized middleware (</w:t></w:r><w:r><w:rPr><w:rStyle w:val="VerbatimChar" /></w:rPr><w:t xml:space="preserve">authMiddleware.ts</w:t></w:r><w:r><w:t xml:space="preserve">,</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:rPr><w:rStyle w:val="VerbatimChar" /></w:rPr><w:t xml:space="preserve">mfaRoutes.js</w:t></w:r><w:r><w:t xml:space="preserve">).</w:t></w:r></w:p>
    <w:p><w:pPr><w:pStyle w:val="Compact" /><w:numPr><w:ilvl w:val="0" /><w:numId w:val="1057" /></w:numPr></w:pPr><w:r><w:rPr><w:b /><w:bCs /></w:rPr><w:t xml:space="preserve">Frontend:</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:t xml:space="preserve">The frontend utilizes a</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:rPr><w:b /><w:bCs /></w:rPr><w:t xml:space="preserve">component-based architecture</w:t></w:r><w:r><w:t xml:space="preserve">, which is fundamental to React. The UI is constructed from reusable components (located in</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:rPr><w:rStyle w:val="VerbatimChar" /></w:rPr><w:t xml:space="preserve">frontend/src/components/</w:t></w:r><w:r><w:t xml:space="preserve">). State management is handled through a combination of local component state for component-specific data and React Context API (evident from</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:rPr><w:rStyle w:val="VerbatimChar" /></w:rPr><w:t xml:space="preserve">frontend/src/contexts/</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:t xml:space="preserve">such as</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:rPr><w:rStyle w:val="VerbatimChar" /></w:rPr><w:t xml:space="preserve">AuthContext.js</w:t></w:r><w:r><w:t xml:space="preserve">) for managing global or shared state like user authentication status across different parts of the application. Client-side routing is managed by</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:rPr><w:rStyle w:val="VerbatimChar" /></w:rPr><w:t xml:space="preserve">react-router-dom</w:t></w:r><w:r><w:t xml:space="preserve">, enabling a smooth SPA experience.</w:t></w:r></w:p>
    <w:p><w:pPr><w:pStyle w:val="FirstParagraph" /></w:pPr><w:r><w:rPr><w:b /><w:bCs /></w:rPr><w:t xml:space="preserve">3. Technology Choices Rationale</w:t></w:r></w:p>
    <w:p><w:pPr><w:pStyle w:val="Compact" /><w:numPr><w:ilvl w:val="0" /><w:numId w:val="1058" /></w:numPr></w:pPr><w:r><w:rPr><w:b /><w:bCs /></w:rPr><w:t xml:space="preserve">MERN Stack (MongoDB, Express.js, React, Node.js) with TypeScript:</w:t></w:r></w:p>
    <w:p><w:pPr><w:pStyle w:val="Compact" /><w:numPr><w:ilvl w:val="1" /><w:numId w:val="1059" /></w:numPr></w:pPr><w:r><w:rPr><w:b /><w:bCs /></w:rPr><w:t xml:space="preserve">Unified JavaScript/TypeScript Ecosystem:</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:t xml:space="preserve">Utilizing JavaScript and progressively TypeScript across the full stack (Node.js for the backend, React for the frontend) streamlines development. It allows for potential code sharing (e.g., utility functions, interfaces/types with TypeScript), requires a more focused skillset within the development team, and grants access to the vast NPM ecosystem for a wide array of libraries and tools.</w:t></w:r></w:p>
    <w:p><w:pPr><w:pStyle w:val="Compact" /><w:numPr><w:ilvl w:val="1" /><w:numId w:val="1059" /></w:numPr></w:pPr><w:r><w:rPr><w:b /><w:bCs /></w:rPr><w:t xml:space="preserve">MongoDB Atlas (NoSQL Database):</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:t xml:space="preserve">MongoDB’s document-oriented nature provides schema flexibility, which is highly beneficial for an application like SmartBin with diverse and potentially evolving data structures (user profiles, varied service requests, logs, etc.). Using MongoDB Atlas as a managed cloud database service offloads operational burdens such as setup, maintenance, backups, and scaling, allowing the team to focus on application development. Its scalability features are also crucial for future growth.</w:t></w:r></w:p>
    <w:p><w:pPr><w:pStyle w:val="Compact" /><w:numPr><w:ilvl w:val="1" /><w:numId w:val="1059" /></w:numPr></w:pPr><w:r><w:rPr><w:b /><w:bCs /></w:rPr><w:t xml:space="preserve">Express.js (on Node.js for Backend):</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:t xml:space="preserve">Express.js is a minimalist, unopinionated, and highly flexible Node.js web application framework. It excels at building robust RESTful APIs quickly. Its extensive middleware ecosystem allows for easy integration of functionalities like security, logging, and request processing. Its non-blocking I/O model, inherent from Node.js, is well-suited for handling concurrent requests efficiently.</w:t></w:r></w:p>
    <w:p><w:pPr><w:pStyle w:val="Compact" /><w:numPr><w:ilvl w:val="1" /><w:numId w:val="1059" /></w:numPr></w:pPr><w:r><w:rPr><w:b /><w:bCs /></w:rPr><w:t xml:space="preserve">React (Frontend Library):</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:t xml:space="preserve">React is a powerful and widely adopted JavaScript library for building dynamic, interactive, and high-performance user interfaces. Its component-based architecture promotes UI reusability, modularity, and easier maintenance. The virtual DOM ensures efficient updates and rendering, leading to a responsive user experience.</w:t></w:r></w:p>
    <w:p><w:pPr><w:pStyle w:val="Compact" /><w:numPr><w:ilvl w:val="1" /><w:numId w:val="1059" /></w:numPr></w:pPr><w:r><w:rPr><w:b /><w:bCs /></w:rPr><w:t xml:space="preserve">TypeScript:</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:t xml:space="preserve">The adoption of TypeScript across both frontend and (increasingly) backend development significantly enhances code quality, robustness, and maintainability. Static typing helps catch errors during development rather than at runtime, improves code readability and navigation, and makes refactoring safer and easier, which is particularly valuable for a complex, multi-module system like SmartBin.</w:t></w:r></w:p>
    <w:p><w:pPr><w:pStyle w:val="Compact" /><w:numPr><w:ilvl w:val="0" /><w:numId w:val="1058" /></w:numPr></w:pPr><w:r><w:rPr><w:b /><w:bCs /></w:rPr><w:t xml:space="preserve">Vite (Frontend Build Tool):</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:t xml:space="preserve">Vite was selected for the frontend build process due to its modern architecture that offers significantly faster development server start-up times and Hot Module Replacement (HMR) compared to older bundlers. This results in a more efficient and pleasant development experience for the React application.</w:t></w:r></w:p>
    <w:p><w:pPr><w:pStyle w:val="FirstParagraph" /></w:pPr><w:r><w:rPr><w:b /><w:bCs /></w:rPr><w:t xml:space="preserve">II. Backend Design &amp; Development (Node.js/Express.js, MongoDB Atlas, TypeScript/JavaScript)</w:t></w:r></w:p>
    <w:p><w:pPr><w:pStyle w:val="BodyText" /></w:pPr><w:r><w:rPr><w:b /><w:bCs /></w:rPr><w:t xml:space="preserve">1. API Design</w:t></w:r></w:p>
    <w:p><w:pPr><w:pStyle w:val="Compact" /><w:numPr><w:ilvl w:val="0" /><w:numId w:val="1060" /></w:numPr></w:pPr><w:r><w:rPr><w:b /><w:bCs /></w:rPr><w:t xml:space="preserve">Structure:</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:t xml:space="preserve">The backend exposes RESTful APIs. Routes are generally organized by resource or feature, for example,</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:rPr><w:rStyle w:val="VerbatimChar" /></w:rPr><w:t xml:space="preserve">/api/users</w:t></w:r><w:r><w:t xml:space="preserve">,</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:rPr><w:rStyle w:val="VerbatimChar" /></w:rPr><w:t xml:space="preserve">/api/auth</w:t></w:r><w:r><w:t xml:space="preserve">,</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:rPr><w:rStyle w:val="VerbatimChar" /></w:rPr><w:t xml:space="preserve">/api/pickup</w:t></w:r><w:r><w:t xml:space="preserve">,</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:rPr><w:rStyle w:val="VerbatimChar" /></w:rPr><w:t xml:space="preserve">/api/financials</w:t></w:r><w:r><w:t xml:space="preserve">,</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:rPr><w:rStyle w:val="VerbatimChar" /></w:rPr><w:t xml:space="preserve">/api/schedules</w:t></w:r><w:r><w:t xml:space="preserve">,</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:rPr><w:rStyle w:val="VerbatimChar" /></w:rPr><w:t xml:space="preserve">/api/complaints</w:t></w:r><w:r><w:t xml:space="preserve">, etc. Standard HTTP verbs (GET, POST, PUT, DELETE, PATCH) are utilized for CRUD (Create, Read, Update, Delete) operations on these resources.</w:t></w:r></w:p>
    <w:p><w:pPr><w:pStyle w:val="Compact" /><w:numPr><w:ilvl w:val="0" /><w:numId w:val="1060" /></w:numPr></w:pPr><w:r><w:rPr><w:b /><w:bCs /></w:rPr><w:t xml:space="preserve">API Versioning:</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:t xml:space="preserve">Explicit API versioning (e.g.,</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:rPr><w:rStyle w:val="VerbatimChar" /></w:rPr><w:t xml:space="preserve">/api/v1/...</w:t></w:r><w:r><w:t xml:space="preserve">) was not observed in the primary route definitions within</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:rPr><w:rStyle w:val="VerbatimChar" /></w:rPr><w:t xml:space="preserve">server.ts</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:t xml:space="preserve">or the explored route files. The API is assumed to be operating on its initial version.</w:t></w:r></w:p>
    <w:p><w:pPr><w:pStyle w:val="Compact" /><w:numPr><w:ilvl w:val="0" /><w:numId w:val="1060" /></w:numPr></w:pPr><w:r><w:rPr><w:b /><w:bCs /></w:rPr><w:t xml:space="preserve">Middleware Components:</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:t xml:space="preserve">A suite of middleware is employed to handle various cross-cutting concerns:</w:t></w:r></w:p>
    <w:p><w:pPr><w:pStyle w:val="Compact" /><w:numPr><w:ilvl w:val="1" /><w:numId w:val="1061" /></w:numPr></w:pPr><w:r><w:rPr><w:b /><w:bCs /></w:rPr><w:t xml:space="preserve">Security:</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:rPr><w:rStyle w:val="VerbatimChar" /></w:rPr><w:t xml:space="preserve">helmet</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:t xml:space="preserve">(sets various HTTP headers for security),</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:rPr><w:rStyle w:val="VerbatimChar" /></w:rPr><w:t xml:space="preserve">cors</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:t xml:space="preserve">(enables Cross-Origin Resource Sharing),</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:rPr><w:rStyle w:val="VerbatimChar" /></w:rPr><w:t xml:space="preserve">express-rate-limit</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:t xml:space="preserve">(protects against brute-force and denial-of-service attacks),</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:rPr><w:rStyle w:val="VerbatimChar" /></w:rPr><w:t xml:space="preserve">express-mongo-sanitize</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:t xml:space="preserve">(prevents NoSQL query injection),</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:rPr><w:rStyle w:val="VerbatimChar" /></w:rPr><w:t xml:space="preserve">hpp</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:t xml:space="preserve">(protects against HTTP Parameter Pollution attacks).</w:t></w:r></w:p>
    <w:p><w:pPr><w:pStyle w:val="Compact" /><w:numPr><w:ilvl w:val="1" /><w:numId w:val="1061" /></w:numPr></w:pPr><w:r><w:rPr><w:b /><w:bCs /></w:rPr><w:t xml:space="preserve">Authentication &amp; Authorization:</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:t xml:space="preserve">Custom middleware located in</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:rPr><w:rStyle w:val="VerbatimChar" /></w:rPr><w:t xml:space="preserve">authMiddleware.ts</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:t xml:space="preserve">is responsible for verifying JWTs and likely performing role-based access checks. Routes defined in</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:rPr><w:rStyle w:val="VerbatimChar" /></w:rPr><w:t xml:space="preserve">mfaRoutes.js</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:t xml:space="preserve">handle the logic for multi-factor authentication.</w:t></w:r></w:p>
    <w:p><w:pPr><w:pStyle w:val="Compact" /><w:numPr><w:ilvl w:val="1" /><w:numId w:val="1061" /></w:numPr></w:pPr><w:r><w:rPr><w:b /><w:bCs /></w:rPr><w:t xml:space="preserve">Validation:</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:rPr><w:rStyle w:val="VerbatimChar" /></w:rPr><w:t xml:space="preserve">express-validator</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:t xml:space="preserve">is used for validating incoming request data (e.g., body, params, query). Validation rules are often defined and applied within route handlers or separate validation middleware (partially seen in</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:rPr><w:rStyle w:val="VerbatimChar" /></w:rPr><w:t xml:space="preserve">validate.ts</w:t></w:r><w:r><w:t xml:space="preserve">). Errors from validation are handled by</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:rPr><w:rStyle w:val="VerbatimChar" /></w:rPr><w:t xml:space="preserve">validationErrorHandler.ts</w:t></w:r><w:r><w:t xml:space="preserve">.</w:t></w:r></w:p>
    <w:p><w:pPr><w:pStyle w:val="Compact" /><w:numPr><w:ilvl w:val="1" /><w:numId w:val="1061" /></w:numPr></w:pPr><w:r><w:rPr><w:b /><w:bCs /></w:rPr><w:t xml:space="preserve">Error Handling:</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:t xml:space="preserve">A centralized error handling mechanism is in place, featuring a custom</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:rPr><w:rStyle w:val="VerbatimChar" /></w:rPr><w:t xml:space="preserve">AppError</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:t xml:space="preserve">utility class (</w:t></w:r><w:r><w:rPr><w:rStyle w:val="VerbatimChar" /></w:rPr><w:t xml:space="preserve">src/utils/appError.ts</w:t></w:r><w:r><w:t xml:space="preserve">) for creating structured operational errors, and a global</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:rPr><w:rStyle w:val="VerbatimChar" /></w:rPr><w:t xml:space="preserve">errorHandler</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:t xml:space="preserve">middleware (</w:t></w:r><w:r><w:rPr><w:rStyle w:val="VerbatimChar" /></w:rPr><w:t xml:space="preserve">middleware/errorMiddleware.ts</w:t></w:r><w:r><w:t xml:space="preserve">) that processes errors and sends consistent JSON responses to the client.</w:t></w:r></w:p>
    <w:p><w:pPr><w:pStyle w:val="Compact" /><w:numPr><w:ilvl w:val="1" /><w:numId w:val="1061" /></w:numPr></w:pPr><w:r><w:rPr><w:b /><w:bCs /></w:rPr><w:t xml:space="preserve">Logging:</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:rPr><w:rStyle w:val="VerbatimChar" /></w:rPr><w:t xml:space="preserve">morgan</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:t xml:space="preserve">is utilized for HTTP request logging in the development environment, providing details such as request method, URL, status code, and response time.</w:t></w:r></w:p>
    <w:p><w:pPr><w:pStyle w:val="Compact" /><w:numPr><w:ilvl w:val="1" /><w:numId w:val="1061" /></w:numPr></w:pPr><w:r><w:rPr><w:b /><w:bCs /></w:rPr><w:t xml:space="preserve">Other Core Middleware:</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:rPr><w:rStyle w:val="VerbatimChar" /></w:rPr><w:t xml:space="preserve">compression</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:t xml:space="preserve">(for gzipping responses to reduce bandwidth),</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:rPr><w:rStyle w:val="VerbatimChar" /></w:rPr><w:t xml:space="preserve">express.json()</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:t xml:space="preserve">and</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:rPr><w:rStyle w:val="VerbatimChar" /></w:rPr><w:t xml:space="preserve">express.urlencoded()</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:t xml:space="preserve">(for parsing JSON and URL-encoded request bodies),</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:rPr><w:rStyle w:val="VerbatimChar" /></w:rPr><w:t xml:space="preserve">multer</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:t xml:space="preserve">(for handling</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:rPr><w:rStyle w:val="VerbatimChar" /></w:rPr><w:t xml:space="preserve">multipart/form-data</w:t></w:r><w:r><w:t xml:space="preserve">, primarily used for file uploads, e.g., in</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:rPr><w:rStyle w:val="VerbatimChar" /></w:rPr><w:t xml:space="preserve">documentRoutes.js</w:t></w:r><w:r><w:t xml:space="preserve">).</w:t></w:r></w:p>
    <w:p><w:pPr><w:pStyle w:val="FirstParagraph" /></w:pPr><w:r><w:rPr><w:b /><w:bCs /></w:rPr><w:t xml:space="preserve">2. Database Design (MongoDB Atlas with Mongoose)</w:t></w:r></w:p>
    <w:p><w:pPr><w:pStyle w:val="BodyText" /></w:pPr><w:r><w:t xml:space="preserve">Mongoose serves as the Object Data Modeling (ODM) library, providing a schema-based solution to model application data and interact with the MongoDB Atlas database.</w:t></w:r></w:p>
    <w:p><w:pPr><w:pStyle w:val="Compact" /><w:numPr><w:ilvl w:val="0" /><w:numId w:val="1062" /></w:numPr></w:pPr><w:r><w:rPr><w:b /><w:bCs /></w:rPr><w:t xml:space="preserve">Key Mongoose Schemas/Models (Organized by inferred module):</w:t></w:r></w:p>
    <w:p><w:pPr><w:pStyle w:val="Compact" /><w:numPr><w:ilvl w:val="1" /><w:numId w:val="1063" /></w:numPr></w:pPr><w:r><w:rPr><w:b /><w:bCs /></w:rPr><w:t xml:space="preserve">User, Staff &amp; Authentication:</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:rPr><w:rStyle w:val="VerbatimChar" /></w:rPr><w:t xml:space="preserve">User.js</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:t xml:space="preserve">(core model for all users including customers, staff, admins, recyclers; stores profile info, credentials with hashed passwords, roles, MFA details),</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:rPr><w:rStyle w:val="VerbatimChar" /></w:rPr><w:t xml:space="preserve">Attendance.js</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:t xml:space="preserve">(for staff clock-in/out records),</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:rPr><w:rStyle w:val="VerbatimChar" /></w:rPr><w:t xml:space="preserve">Complaint.js</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:t xml:space="preserve">(for issues logged by users/staff),</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:rPr><w:rStyle w:val="VerbatimChar" /></w:rPr><w:t xml:space="preserve">Performance.js</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:t xml:space="preserve">(for staff performance reviews/metrics),</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:rPr><w:rStyle w:val="VerbatimChar" /></w:rPr><w:t xml:space="preserve">Document.js</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:t xml:space="preserve">(for storing metadata about uploaded documents, e.g., staff certifications).</w:t></w:r></w:p>
    <w:p><w:pPr><w:pStyle w:val="Compact" /><w:numPr><w:ilvl w:val="1" /><w:numId w:val="1063" /></w:numPr></w:pPr><w:r><w:rPr><w:b /><w:bCs /></w:rPr><w:t xml:space="preserve">Financial Management:</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:rPr><w:rStyle w:val="VerbatimChar" /></w:rPr><w:t xml:space="preserve">SubscriptionPlan.js</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:t xml:space="preserve">(defines available service subscription tiers with pricing and features),</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:rPr><w:rStyle w:val="VerbatimChar" /></w:rPr><w:t xml:space="preserve">UserSubscription.js</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:t xml:space="preserve">(links users to their active subscription plans),</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:rPr><w:rStyle w:val="VerbatimChar" /></w:rPr><w:t xml:space="preserve">Payment.js</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:t xml:space="preserve">(records all payment transactions, likely linked to Stripe),</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:rPr><w:rStyle w:val="VerbatimChar" /></w:rPr><w:t xml:space="preserve">Expense.js</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:t xml:space="preserve">(for tracking operational expenses),</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:rPr><w:rStyle w:val="VerbatimChar" /></w:rPr><w:t xml:space="preserve">PayrollLog.js</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:t xml:space="preserve">(stores records of processed payroll for staff),</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:rPr><w:rStyle w:val="VerbatimChar" /></w:rPr><w:t xml:space="preserve">Budget.js</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:t xml:space="preserve">(for defining and tracking budgets).</w:t></w:r></w:p>
    <w:p><w:pPr><w:pStyle w:val="Compact" /><w:numPr><w:ilvl w:val="1" /><w:numId w:val="1063" /></w:numPr></w:pPr><w:r><w:rPr><w:b /><w:bCs /></w:rPr><w:t xml:space="preserve">Recycling Management:</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:rPr><w:rStyle w:val="VerbatimChar" /></w:rPr><w:t xml:space="preserve">RecyclingRequest.js</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:t xml:space="preserve">(requests from recyclers to purchase waste),</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:rPr><w:rStyle w:val="VerbatimChar" /></w:rPr><w:t xml:space="preserve">AdminRecyclingRequest.js</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:t xml:space="preserve">(potentially a separate model or a specialized view for admin processing of these requests; needs clarification if it’s a distinct collection or an aggregation target).</w:t></w:r></w:p>
    <w:p><w:pPr><w:pStyle w:val="Compact" /><w:numPr><w:ilvl w:val="1" /><w:numId w:val="1063" /></w:numPr></w:pPr><w:r><w:rPr><w:b /><w:bCs /></w:rPr><w:t xml:space="preserve">Pickup Request Management:</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:rPr><w:rStyle w:val="VerbatimChar" /></w:rPr><w:t xml:space="preserve">Pickup.ts</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:t xml:space="preserve">(customer-initiated requests for garbage pickup, including details like waste types, address, geolocation coordinates, preferred date, calculated amount, and status).</w:t></w:r></w:p>
    <w:p><w:pPr><w:pStyle w:val="Compact" /><w:numPr><w:ilvl w:val="1" /><w:numId w:val="1063" /></w:numPr></w:pPr><w:r><w:rPr><w:b /><w:bCs /></w:rPr><w:t xml:space="preserve">Schedule &amp; Resource Management:</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:rPr><w:rStyle w:val="VerbatimChar" /></w:rPr><w:t xml:space="preserve">Schedule.ts</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:t xml:space="preserve">(defines collection schedules, assigned routes, linked staff, and vehicles),</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:rPr><w:rStyle w:val="VerbatimChar" /></w:rPr><w:t xml:space="preserve">Truck.ts</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:t xml:space="preserve">(information about collection vehicles),</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:rPr><w:rStyle w:val="VerbatimChar" /></w:rPr><w:t xml:space="preserve">Tool.ts</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:t xml:space="preserve">(details of tools used in operations),</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:rPr><w:rStyle w:val="VerbatimChar" /></w:rPr><w:t xml:space="preserve">Equipment.ts</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:t xml:space="preserve">(details of other operational equipment).</w:t></w:r></w:p>
    <w:p><w:pPr><w:pStyle w:val="Compact" /><w:numPr><w:ilvl w:val="1" /><w:numId w:val="1063" /></w:numPr></w:pPr><w:r><w:rPr><w:b /><w:bCs /></w:rPr><w:t xml:space="preserve">System &amp; Utility:</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:rPr><w:rStyle w:val="VerbatimChar" /></w:rPr><w:t xml:space="preserve">Settings.js</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:t xml:space="preserve">(stores global application settings, e.g., default currency, timezone),</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:rPr><w:rStyle w:val="VerbatimChar" /></w:rPr><w:t xml:space="preserve">Log.js</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:t xml:space="preserve">(potentially for custom application-level event logging beyond HTTP requests).</w:t></w:r></w:p>
    <w:p><w:pPr><w:pStyle w:val="Compact" /><w:numPr><w:ilvl w:val="0" /><w:numId w:val="1062" /></w:numPr></w:pPr><w:r><w:rPr><w:b /><w:bCs /></w:rPr><w:t xml:space="preserve">Key Model Relationships (Examples - inferred):</w:t></w:r></w:p>
    <w:p><w:pPr><w:pStyle w:val="Compact" /><w:numPr><w:ilvl w:val="1" /><w:numId w:val="1064" /></w:numPr></w:pPr><w:r><w:rPr><w:rStyle w:val="VerbatimChar" /></w:rPr><w:t xml:space="preserve">UserSubscription</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:t xml:space="preserve">has references to</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:rPr><w:rStyle w:val="VerbatimChar" /></w:rPr><w:t xml:space="preserve">User</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:t xml:space="preserve">(via</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:rPr><w:rStyle w:val="VerbatimChar" /></w:rPr><w:t xml:space="preserve">userId</w:t></w:r><w:r><w:t xml:space="preserve">) and</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:rPr><w:rStyle w:val="VerbatimChar" /></w:rPr><w:t xml:space="preserve">SubscriptionPlan</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:t xml:space="preserve">(via</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:rPr><w:rStyle w:val="VerbatimChar" /></w:rPr><w:t xml:space="preserve">planId</w:t></w:r><w:r><w:t xml:space="preserve">).</w:t></w:r></w:p>
    <w:p><w:pPr><w:pStyle w:val="Compact" /><w:numPr><w:ilvl w:val="1" /><w:numId w:val="1064" /></w:numPr></w:pPr><w:r><w:rPr><w:rStyle w:val="VerbatimChar" /></w:rPr><w:t xml:space="preserve">Pickup</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:t xml:space="preserve">requests contain references or embedded information linking them to the requesting</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:rPr><w:rStyle w:val="VerbatimChar" /></w:rPr><w:t xml:space="preserve">User</w:t></w:r><w:r><w:t xml:space="preserve">.</w:t></w:r></w:p>
    <w:p><w:pPr><w:pStyle w:val="Compact" /><w:numPr><w:ilvl w:val="1" /><w:numId w:val="1064" /></w:numPr></w:pPr><w:r><w:rPr><w:rStyle w:val="VerbatimChar" /></w:rPr><w:t xml:space="preserve">Schedule</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:t xml:space="preserve">entries would reference</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:rPr><w:rStyle w:val="VerbatimChar" /></w:rPr><w:t xml:space="preserve">User</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:t xml:space="preserve">(assigned staff/drivers) and</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:rPr><w:rStyle w:val="VerbatimChar" /></w:rPr><w:t xml:space="preserve">Truck</w:t></w:r><w:r><w:t xml:space="preserve">, and might contain an array of</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:rPr><w:rStyle w:val="VerbatimChar" /></w:rPr><w:t xml:space="preserve">Pickup</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:t xml:space="preserve">IDs or service area identifiers.</w:t></w:r></w:p>
    <w:p><w:pPr><w:pStyle w:val="Compact" /><w:numPr><w:ilvl w:val="1" /><w:numId w:val="1064" /></w:numPr></w:pPr><w:r><w:rPr><w:rStyle w:val="VerbatimChar" /></w:rPr><w:t xml:space="preserve">PayrollLog</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:t xml:space="preserve">instances are associated with specific</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:rPr><w:rStyle w:val="VerbatimChar" /></w:rPr><w:t xml:space="preserve">User</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:t xml:space="preserve">(staff) documents.</w:t></w:r></w:p>
    <w:p><w:pPr><w:pStyle w:val="Compact" /><w:numPr><w:ilvl w:val="1" /><w:numId w:val="1064" /></w:numPr></w:pPr><w:r><w:rPr><w:rStyle w:val="VerbatimChar" /></w:rPr><w:t xml:space="preserve">Complaint</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:t xml:space="preserve">documents are linked to the</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:rPr><w:rStyle w:val="VerbatimChar" /></w:rPr><w:t xml:space="preserve">User</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:t xml:space="preserve">who submitted them and potentially to related entities like a</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:rPr><w:rStyle w:val="VerbatimChar" /></w:rPr><w:t xml:space="preserve">Pickup</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:t xml:space="preserve">request or</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:rPr><w:rStyle w:val="VerbatimChar" /></w:rPr><w:t xml:space="preserve">Schedule</w:t></w:r><w:r><w:t xml:space="preserve">.</w:t></w:r></w:p>
    <w:p><w:pPr><w:pStyle w:val="Compact" /><w:numPr><w:ilvl w:val="1" /><w:numId w:val="1064" /></w:numPr></w:pPr><w:r><w:rPr><w:rStyle w:val="VerbatimChar" /></w:rPr><w:t xml:space="preserve">Payment</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:t xml:space="preserve">records are linked to</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:rPr><w:rStyle w:val="VerbatimChar" /></w:rPr><w:t xml:space="preserve">User</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:t xml:space="preserve">and potentially</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:rPr><w:rStyle w:val="VerbatimChar" /></w:rPr><w:t xml:space="preserve">UserSubscription</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:t xml:space="preserve">or specific</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:rPr><w:rStyle w:val="VerbatimChar" /></w:rPr><w:t xml:space="preserve">Pickup</w:t></w:r><w:r><w:t xml:space="preserve">/</w:t></w:r><w:r><w:rPr><w:rStyle w:val="VerbatimChar" /></w:rPr><w:t xml:space="preserve">RecyclingRequest</w:t></w:r><w:r><w:t xml:space="preserve">.</w:t></w:r></w:p>
    <w:p><w:pPr><w:pStyle w:val="Compact" /><w:numPr><w:ilvl w:val="0" /><w:numId w:val="1062" /></w:numPr></w:pPr><w:r><w:rPr><w:b /><w:bCs /></w:rPr><w:t xml:space="preserve">Indexing Strategies:</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:t xml:space="preserve">Mongoose automatically creates an</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:rPr><w:rStyle w:val="VerbatimChar" /></w:rPr><w:t xml:space="preserve">_id</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:t xml:space="preserve">index for each collection. For performance, it is standard practice to define additional indexes on fields frequently used in queries, such as</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:rPr><w:rStyle w:val="VerbatimChar" /></w:rPr><w:t xml:space="preserve">email</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:t xml:space="preserve">in the</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:rPr><w:rStyle w:val="VerbatimChar" /></w:rPr><w:t xml:space="preserve">User</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:t xml:space="preserve">model (for login),</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:rPr><w:rStyle w:val="VerbatimChar" /></w:rPr><w:t xml:space="preserve">status</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:t xml:space="preserve">in</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:rPr><w:rStyle w:val="VerbatimChar" /></w:rPr><w:t xml:space="preserve">Pickup</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:t xml:space="preserve">and</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:rPr><w:rStyle w:val="VerbatimChar" /></w:rPr><w:t xml:space="preserve">RecyclingRequest</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:t xml:space="preserve">models (for filtering and dashboards), and date fields for time-based queries. Timestamps (</w:t></w:r><w:r><w:rPr><w:rStyle w:val="VerbatimChar" /></w:rPr><w:t xml:space="preserve">createdAt</w:t></w:r><w:r><w:t xml:space="preserve">,</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:rPr><w:rStyle w:val="VerbatimChar" /></w:rPr><w:t xml:space="preserve">updatedAt</w:t></w:r><w:r><w:t xml:space="preserve">), which are often added by Mongoose, are also commonly indexed.</w:t></w:r></w:p>
    <w:p><w:pPr><w:pStyle w:val="Compact" /><w:numPr><w:ilvl w:val="0" /><w:numId w:val="1062" /></w:numPr></w:pPr><w:r><w:rPr><w:b /><w:bCs /></w:rPr><w:t xml:space="preserve">Data Validation:</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:t xml:space="preserve">Data integrity is enforced at the model level through Mongoose schemas. This includes schema-level validation for data types (String, Number, Date, Boolean, ObjectId, Array),</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:rPr><w:rStyle w:val="VerbatimChar" /></w:rPr><w:t xml:space="preserve">required</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:t xml:space="preserve">fields,</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:rPr><w:rStyle w:val="VerbatimChar" /></w:rPr><w:t xml:space="preserve">unique</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:t xml:space="preserve">constraints,</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:rPr><w:rStyle w:val="VerbatimChar" /></w:rPr><w:t xml:space="preserve">enum</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:t xml:space="preserve">(for fields with a predefined set of allowed values like status fields),</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:rPr><w:rStyle w:val="VerbatimChar" /></w:rPr><w:t xml:space="preserve">min</w:t></w:r><w:r><w:t xml:space="preserve">/</w:t></w:r><w:r><w:rPr><w:rStyle w:val="VerbatimChar" /></w:rPr><w:t xml:space="preserve">max</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:t xml:space="preserve">for numbers,</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:rPr><w:rStyle w:val="VerbatimChar" /></w:rPr><w:t xml:space="preserve">minLength</w:t></w:r><w:r><w:t xml:space="preserve">/</w:t></w:r><w:r><w:rPr><w:rStyle w:val="VerbatimChar" /></w:rPr><w:t xml:space="preserve">maxLength</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:t xml:space="preserve">for strings, and</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:rPr><w:rStyle w:val="VerbatimChar" /></w:rPr><w:t xml:space="preserve">match</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:t xml:space="preserve">for regular expression validation (e.g., for email formats or currency codes as seen in</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:rPr><w:rStyle w:val="VerbatimChar" /></w:rPr><w:t xml:space="preserve">Settings.js</w:t></w:r><w:r><w:t xml:space="preserve">). Custom validation functions can also be implemented if needed.</w:t></w:r></w:p>
    <w:p><w:pPr><w:pStyle w:val="FirstParagraph" /></w:pPr><w:r><w:rPr><w:b /><w:bCs /></w:rPr><w:t xml:space="preserve">3. Authentication &amp; Authorization</w:t></w:r></w:p>
    <w:p><w:pPr><w:pStyle w:val="Compact" /><w:numPr><w:ilvl w:val="0" /><w:numId w:val="1065" /></w:numPr></w:pPr><w:r><w:rPr><w:b /><w:bCs /></w:rPr><w:t xml:space="preserve">JWT Authentication:</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:t xml:space="preserve">User authentication is handled using JSON Web Tokens (JWT). The</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:rPr><w:rStyle w:val="VerbatimChar" /></w:rPr><w:t xml:space="preserve">jsonwebtoken</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:t xml:space="preserve">library is used. Upon successful login (credentials verified against</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:rPr><w:rStyle w:val="VerbatimChar" /></w:rPr><w:t xml:space="preserve">bcryptjs</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:t xml:space="preserve">hashed passwords),</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:rPr><w:rStyle w:val="VerbatimChar" /></w:rPr><w:t xml:space="preserve">authRoutes.js</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:t xml:space="preserve">(and its controller) generates a JWT containing user identity information (like ID and role). This token is sent to the client, which includes it in the</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:rPr><w:rStyle w:val="VerbatimChar" /></w:rPr><w:t xml:space="preserve">Authorization</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:t xml:space="preserve">header (typically as a Bearer token) for subsequent authenticated requests. The</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:rPr><w:rStyle w:val="VerbatimChar" /></w:rPr><w:t xml:space="preserve">authMiddleware.ts</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:t xml:space="preserve">intercepts these requests, verifies the token’s validity and signature, and attaches the user information to the request object for use in downstream controllers/services.</w:t></w:r></w:p>
    <w:p><w:pPr><w:pStyle w:val="Compact" /><w:numPr><w:ilvl w:val="0" /><w:numId w:val="1065" /></w:numPr></w:pPr><w:r><w:rPr><w:b /><w:bCs /></w:rPr><w:t xml:space="preserve">Multi-Factor Authentication (MFA):</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:t xml:space="preserve">MFA is implemented using Time-based One-Time Passwords (TOTP).</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:rPr><w:rStyle w:val="VerbatimChar" /></w:rPr><w:t xml:space="preserve">speakeasy</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:t xml:space="preserve">is used for generating and verifying TOTP secrets and codes, and</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:rPr><w:rStyle w:val="VerbatimChar" /></w:rPr><w:t xml:space="preserve">qrcode</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:t xml:space="preserve">is used to generate QR codes that users can scan with authenticator apps (like Google Authenticator or Authy) to set up MFA. The</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:rPr><w:rStyle w:val="VerbatimChar" /></w:rPr><w:t xml:space="preserve">mfaRoutes.js</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:t xml:space="preserve">and associated controller (</w:t></w:r><w:r><w:rPr><w:rStyle w:val="VerbatimChar" /></w:rPr><w:t xml:space="preserve">mfaController.js</w:t></w:r><w:r><w:t xml:space="preserve">) manage the processes of generating MFA secrets, displaying QR codes, verifying initial TOTP setup, and validating TOTPs during login for users who have MFA enabled.</w:t></w:r></w:p>
    <w:p><w:pPr><w:pStyle w:val="Compact" /><w:numPr><w:ilvl w:val="0" /><w:numId w:val="1065" /></w:numPr></w:pPr><w:r><w:rPr><w:b /><w:bCs /></w:rPr><w:t xml:space="preserve">Role-Based Access Control (RBAC):</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:t xml:space="preserve">RBAC is enforced primarily within the</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:rPr><w:rStyle w:val="VerbatimChar" /></w:rPr><w:t xml:space="preserve">authMiddleware.ts</w:t></w:r><w:r><w:t xml:space="preserve">. After successful JWT verification, the middleware extracts the user’s role (stored in the</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:rPr><w:rStyle w:val="VerbatimChar" /></w:rPr><w:t xml:space="preserve">User</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:t xml:space="preserve">model and included in the JWT payload). It then checks if this role is permitted to access the requested route or perform the intended action. This can be implemented by defining allowed roles for specific routes or groups of routes. Further role-specific logic might also exist within individual route controllers to control access to particular data or operations based on user roles.</w:t></w:r></w:p>
    <w:p><w:pPr><w:pStyle w:val="FirstParagraph" /></w:pPr><w:r><w:rPr><w:b /><w:bCs /></w:rPr><w:t xml:space="preserve">4. Business Logic &amp; Key Algorithms (Module-wise Overview)</w:t></w:r></w:p>
    <w:p><w:pPr><w:pStyle w:val="Compact" /><w:numPr><w:ilvl w:val="0" /><w:numId w:val="1066" /></w:numPr></w:pPr><w:r><w:rPr><w:b /><w:bCs /></w:rPr><w:t xml:space="preserve">User/Staff/Complaint Management:</w:t></w:r></w:p>
    <w:p><w:pPr><w:pStyle w:val="Compact" /><w:numPr><w:ilvl w:val="1" /><w:numId w:val="1067" /></w:numPr></w:pPr><w:r><w:rPr><w:b /><w:bCs /></w:rPr><w:t xml:space="preserve">User/Staff Lifecycle:</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:t xml:space="preserve">Involves secure registration with password hashing, profile creation/updates, and role assignment by administrators. Staff management includes tracking attendance (</w:t></w:r><w:r><w:rPr><w:rStyle w:val="VerbatimChar" /></w:rPr><w:t xml:space="preserve">Attendance.js</w:t></w:r><w:r><w:t xml:space="preserve">) and performance (</w:t></w:r><w:r><w:rPr><w:rStyle w:val="VerbatimChar" /></w:rPr><w:t xml:space="preserve">Performance.js</w:t></w:r><w:r><w:t xml:space="preserve">). Document uploads (</w:t></w:r><w:r><w:rPr><w:rStyle w:val="VerbatimChar" /></w:rPr><w:t xml:space="preserve">Document.js</w:t></w:r><w:r><w:t xml:space="preserve">) likely support verification processes.</w:t></w:r></w:p>
    <w:p><w:pPr><w:pStyle w:val="Compact" /><w:numPr><w:ilvl w:val="1" /><w:numId w:val="1067" /></w:numPr></w:pPr><w:r><w:rPr><w:b /><w:bCs /></w:rPr><w:t xml:space="preserve">Complaint System (</w:t></w:r><w:r><w:rPr><w:rStyle w:val="VerbatimChar" /><w:b /><w:bCs /></w:rPr><w:t xml:space="preserve">Complaint.js</w:t></w:r><w:r><w:rPr><w:b /><w:bCs /></w:rPr><w:t xml:space="preserve">,</w:t></w:r><w:r><w:rPr><w:b /><w:bCs /></w:rPr><w:t xml:space="preserve"> </w:t></w:r><w:r><w:rPr><w:rStyle w:val="VerbatimChar" /><w:b /><w:bCs /></w:rPr><w:t xml:space="preserve">complaintRoutes.js</w:t></w:r><w:r><w:rPr><w:b /><w:bCs /></w:rPr><w:t xml:space="preserve">):</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:t xml:space="preserve">Users (customers or staff) can submit complaints detailing issues. Administrators can view a list of complaints, filter them, assign them for resolution (if applicable), and update their status (e.g., New, In Progress, Resolved, Closed). Email notifications might be triggered on status changes. Advanced escalation logic (e.g., auto-assigning overdue complaints) would reside in a service layer, though not explicitly detailed in filenames, it’s a common pattern.</w:t></w:r></w:p>
    <w:p><w:pPr><w:pStyle w:val="Compact" /><w:numPr><w:ilvl w:val="0" /><w:numId w:val="1066" /></w:numPr></w:pPr><w:r><w:rPr><w:b /><w:bCs /></w:rPr><w:t xml:space="preserve">Financial Management (</w:t></w:r><w:r><w:rPr><w:rStyle w:val="VerbatimChar" /><w:b /><w:bCs /></w:rPr><w:t xml:space="preserve">financialRoutes.js</w:t></w:r><w:r><w:rPr><w:b /><w:bCs /></w:rPr><w:t xml:space="preserve">,</w:t></w:r><w:r><w:rPr><w:b /><w:bCs /></w:rPr><w:t xml:space="preserve"> </w:t></w:r><w:r><w:rPr><w:rStyle w:val="VerbatimChar" /><w:b /><w:bCs /></w:rPr><w:t xml:space="preserve">payrollRoutes.js</w:t></w:r><w:r><w:rPr><w:b /><w:bCs /></w:rPr><w:t xml:space="preserve">,</w:t></w:r><w:r><w:rPr><w:b /><w:bCs /></w:rPr><w:t xml:space="preserve"> </w:t></w:r><w:r><w:rPr><w:rStyle w:val="VerbatimChar" /><w:b /><w:bCs /></w:rPr><w:t xml:space="preserve">subscriptionPlanRoutes.js</w:t></w:r><w:r><w:rPr><w:b /><w:bCs /></w:rPr><w:t xml:space="preserve">, etc.):</w:t></w:r></w:p>
    <w:p><w:pPr><w:pStyle w:val="Compact" /><w:numPr><w:ilvl w:val="1" /><w:numId w:val="1068" /></w:numPr></w:pPr><w:r><w:rPr><w:b /><w:bCs /></w:rPr><w:t xml:space="preserve">Subscription &amp; Billing:</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:t xml:space="preserve">Admins define subscription plans (</w:t></w:r><w:r><w:rPr><w:rStyle w:val="VerbatimChar" /></w:rPr><w:t xml:space="preserve">SubscriptionPlan.js</w:t></w:r><w:r><w:t xml:space="preserve">) with pricing and features. Customers subscribe via</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:rPr><w:rStyle w:val="VerbatimChar" /></w:rPr><w:t xml:space="preserve">UserSubscription.js</w:t></w:r><w:r><w:t xml:space="preserve">. The system likely generates invoices periodically (e.g., monthly) based on active subscriptions. Logic for handling upgrades/downgrades, prorated charges, and trial periods would be part of this module’s service layer.</w:t></w:r></w:p>
    <w:p><w:pPr><w:pStyle w:val="Compact" /><w:numPr><w:ilvl w:val="1" /><w:numId w:val="1068" /></w:numPr></w:pPr><w:r><w:rPr><w:b /><w:bCs /></w:rPr><w:t xml:space="preserve">Payment Processing:</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:t xml:space="preserve">Integration with Stripe (</w:t></w:r><w:r><w:rPr><w:rStyle w:val="VerbatimChar" /></w:rPr><w:t xml:space="preserve">stripe</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:t xml:space="preserve">library) handles online payments for subscriptions and one-time services (like pickups). This involves creating checkout sessions, handling webhooks for payment success/failure, and updating</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:rPr><w:rStyle w:val="VerbatimChar" /></w:rPr><w:t xml:space="preserve">Payment.js</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:t xml:space="preserve">records.</w:t></w:r></w:p>
    <w:p><w:pPr><w:pStyle w:val="Compact" /><w:numPr><w:ilvl w:val="1" /><w:numId w:val="1068" /></w:numPr></w:pPr><w:r><w:rPr><w:b /><w:bCs /></w:rPr><w:t xml:space="preserve">Payroll Management:</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:t xml:space="preserve">Admins can define salary structures or link staff to salary plans. The</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:rPr><w:rStyle w:val="VerbatimChar" /></w:rPr><w:t xml:space="preserve">PayrollLog.js</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:t xml:space="preserve">suggests a process for calculating and recording payroll, likely considering base salary, deductions (taxes, etc.), and potentially bonuses (which could be linked to</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:rPr><w:rStyle w:val="VerbatimChar" /></w:rPr><w:t xml:space="preserve">Performance.js</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:t xml:space="preserve">data). Specific calculation algorithms are in the service layer.</w:t></w:r></w:p>
    <w:p><w:pPr><w:pStyle w:val="Compact" /><w:numPr><w:ilvl w:val="1" /><w:numId w:val="1068" /></w:numPr></w:pPr><w:r><w:rPr><w:b /><w:bCs /></w:rPr><w:t xml:space="preserve">Expense &amp; Budget Tracking:</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:rPr><w:rStyle w:val="VerbatimChar" /></w:rPr><w:t xml:space="preserve">Expense.js</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:t xml:space="preserve">allows for recording operational costs.</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:rPr><w:rStyle w:val="VerbatimChar" /></w:rPr><w:t xml:space="preserve">Budget.js</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:t xml:space="preserve">enables setting financial targets or limits for different categories. Financial reports would then compare actual expenses against budgets.</w:t></w:r></w:p>
    <w:p><w:pPr><w:pStyle w:val="Compact" /><w:numPr><w:ilvl w:val="0" /><w:numId w:val="1066" /></w:numPr></w:pPr><w:r><w:rPr><w:b /><w:bCs /></w:rPr><w:t xml:space="preserve">Recycling Management (</w:t></w:r><w:r><w:rPr><w:rStyle w:val="VerbatimChar" /><w:b /><w:bCs /></w:rPr><w:t xml:space="preserve">RecyclingRequest.js</w:t></w:r><w:r><w:rPr><w:b /><w:bCs /></w:rPr><w:t xml:space="preserve">,</w:t></w:r><w:r><w:rPr><w:b /><w:bCs /></w:rPr><w:t xml:space="preserve"> </w:t></w:r><w:r><w:rPr><w:rStyle w:val="VerbatimChar" /><w:b /><w:bCs /></w:rPr><w:t xml:space="preserve">AdminRecyclingRequest.js</w:t></w:r><w:r><w:rPr><w:b /><w:bCs /></w:rPr><w:t xml:space="preserve">):</w:t></w:r></w:p>
    <w:p><w:pPr><w:pStyle w:val="Compact" /><w:numPr><w:ilvl w:val="1" /><w:numId w:val="1069" /></w:numPr></w:pPr><w:r><w:t xml:space="preserve">Admins list available recyclable materials with details (type, quantity, price). Recyclers browse these listings and submit purchase requests. Admins review and approve/reject requests based on inventory and policies. The system tracks the status of these requests and facilitates communication, likely including payment processing via Stripe for confirmed sales.</w:t></w:r></w:p>
    <w:p><w:pPr><w:pStyle w:val="Compact" /><w:numPr><w:ilvl w:val="0" /><w:numId w:val="1066" /></w:numPr></w:pPr><w:r><w:rPr><w:b /><w:bCs /></w:rPr><w:t xml:space="preserve">Pickup Request Management (</w:t></w:r><w:r><w:rPr><w:rStyle w:val="VerbatimChar" /><w:b /><w:bCs /></w:rPr><w:t xml:space="preserve">pickupRoutes.ts</w:t></w:r><w:r><w:rPr><w:b /><w:bCs /></w:rPr><w:t xml:space="preserve">,</w:t></w:r><w:r><w:rPr><w:b /><w:bCs /></w:rPr><w:t xml:space="preserve"> </w:t></w:r><w:r><w:rPr><w:rStyle w:val="VerbatimChar" /><w:b /><w:bCs /></w:rPr><w:t xml:space="preserve">Pickup.ts</w:t></w:r><w:r><w:rPr><w:b /><w:bCs /></w:rPr><w:t xml:space="preserve">):</w:t></w:r></w:p>
    <w:p><w:pPr><w:pStyle w:val="Compact" /><w:numPr><w:ilvl w:val="1" /><w:numId w:val="1070" /></w:numPr></w:pPr><w:r><w:t xml:space="preserve">Customers submit pickup requests via a form, providing details like name, contact, address (with map-based location selection using Leaflet on frontend, coordinates sent to backend), waste types, and preferred date. The backend calculates a dynamic pickup fee based on factors like waste volume/type and possibly distance (if geolocation is used beyond simple address storage).</w:t></w:r></w:p>
    <w:p><w:pPr><w:pStyle w:val="Compact" /><w:numPr><w:ilvl w:val="1" /><w:numId w:val="1070" /></w:numPr></w:pPr><w:r><w:t xml:space="preserve">Requests progress through statuses (Pending, Approved, On Progress, Completed, Cancelled). Admins manage this workflow. Email notifications (via SendGrid) are sent to users at key status changes (e.g., confirmation, scheduling, completion).</w:t></w:r></w:p>
    <w:p><w:pPr><w:pStyle w:val="Compact" /><w:numPr><w:ilvl w:val="0" /><w:numId w:val="1066" /></w:numPr></w:pPr><w:r><w:rPr><w:b /><w:bCs /></w:rPr><w:t xml:space="preserve">Schedule &amp; Resource Management (</w:t></w:r><w:r><w:rPr><w:rStyle w:val="VerbatimChar" /><w:b /><w:bCs /></w:rPr><w:t xml:space="preserve">scheduleRoutes.ts</w:t></w:r><w:r><w:rPr><w:b /><w:bCs /></w:rPr><w:t xml:space="preserve">,</w:t></w:r><w:r><w:rPr><w:b /><w:bCs /></w:rPr><w:t xml:space="preserve"> </w:t></w:r><w:r><w:rPr><w:rStyle w:val="VerbatimChar" /><w:b /><w:bCs /></w:rPr><w:t xml:space="preserve">resourceRoutes.ts</w:t></w:r><w:r><w:rPr><w:b /><w:bCs /></w:rPr><w:t xml:space="preserve">,</w:t></w:r><w:r><w:rPr><w:b /><w:bCs /></w:rPr><w:t xml:space="preserve"> </w:t></w:r><w:r><w:rPr><w:rStyle w:val="VerbatimChar" /><w:b /><w:bCs /></w:rPr><w:t xml:space="preserve">truck.ts</w:t></w:r><w:r><w:rPr><w:b /><w:bCs /></w:rPr><w:t xml:space="preserve">, etc.):</w:t></w:r></w:p>
    <w:p><w:pPr><w:pStyle w:val="Compact" /><w:numPr><w:ilvl w:val="1" /><w:numId w:val="1071" /></w:numPr></w:pPr><w:r><w:t xml:space="preserve">Administrators create collection schedules, define routes (potentially as a sequence of areas or specific pickup points), and assign these schedules to available drivers (</w:t></w:r><w:r><w:rPr><w:rStyle w:val="VerbatimChar" /></w:rPr><w:t xml:space="preserve">User</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:t xml:space="preserve">with staff role) and vehicles (</w:t></w:r><w:r><w:rPr><w:rStyle w:val="VerbatimChar" /></w:rPr><w:t xml:space="preserve">Truck.ts</w:t></w:r><w:r><w:t xml:space="preserve">). The system tracks the status of trucks, tools (</w:t></w:r><w:r><w:rPr><w:rStyle w:val="VerbatimChar" /></w:rPr><w:t xml:space="preserve">Tool.ts</w:t></w:r><w:r><w:t xml:space="preserve">), and equipment (</w:t></w:r><w:r><w:rPr><w:rStyle w:val="VerbatimChar" /></w:rPr><w:t xml:space="preserve">Equipment.ts</w:t></w:r><w:r><w:t xml:space="preserve">) (e.g., Active, In Maintenance, Available).</w:t></w:r></w:p>
    <w:p><w:pPr><w:pStyle w:val="Compact" /><w:numPr><w:ilvl w:val="1" /><w:numId w:val="1071" /></w:numPr></w:pPr><w:r><w:t xml:space="preserve">Drivers can view their assigned schedules/routes and update the status of individual pickups or entire routes. Basic real-time monitoring might involve displaying vehicle locations (from GPS if available, or last known pickup) on a map for admins.</w:t></w:r></w:p>
    <w:p><w:pPr><w:pStyle w:val="FirstParagraph" /></w:pPr><w:r><w:rPr><w:b /><w:bCs /></w:rPr><w:t xml:space="preserve">5. Error Handling &amp; Logging</w:t></w:r></w:p>
    <w:p><w:pPr><w:pStyle w:val="Compact" /><w:numPr><w:ilvl w:val="0" /><w:numId w:val="1072" /></w:numPr></w:pPr><w:r><w:rPr><w:b /><w:bCs /></w:rPr><w:t xml:space="preserve">Error Handling Strategy:</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:t xml:space="preserve">The backend employs a centralized error handling strategy. Operational errors (expected issues like invalid input, resource not found) are typically represented by the custom</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:rPr><w:rStyle w:val="VerbatimChar" /></w:rPr><w:t xml:space="preserve">AppError</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:t xml:space="preserve">class (defined in</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:rPr><w:rStyle w:val="VerbatimChar" /></w:rPr><w:t xml:space="preserve">src/utils/appError.ts</w:t></w:r><w:r><w:t xml:space="preserve">), which includes a status code and a message. This allows for consistent error creation throughout the application. All errors, whether operational or unexpected programming errors, are caught by a global error handling middleware (</w:t></w:r><w:r><w:rPr><w:rStyle w:val="VerbatimChar" /></w:rPr><w:t xml:space="preserve">errorHandler</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:t xml:space="preserve">in</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:rPr><w:rStyle w:val="VerbatimChar" /></w:rPr><w:t xml:space="preserve">middleware/errorMiddleware.ts</w:t></w:r><w:r><w:t xml:space="preserve">). This middleware is responsible for sending a standardized JSON error response to the client. It differentiates between development and production environments, providing more detailed stack traces in development for easier debugging, while sending more generic, user-friendly error messages in production to avoid exposing sensitive system internals.</w:t></w:r></w:p>
    <w:p><w:pPr><w:pStyle w:val="Compact" /><w:numPr><w:ilvl w:val="0" /><w:numId w:val="1072" /></w:numPr></w:pPr><w:r><w:rPr><w:b /><w:bCs /></w:rPr><w:t xml:space="preserve">Logging:</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:t xml:space="preserve">HTTP request logging is implemented using the</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:rPr><w:rStyle w:val="VerbatimChar" /></w:rPr><w:t xml:space="preserve">morgan</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:t xml:space="preserve">middleware, but only in the</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:rPr><w:rStyle w:val="VerbatimChar" /></w:rPr><w:t xml:space="preserve">development</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:t xml:space="preserve">environment. This logs details of incoming requests like method, URL, status code, and response time to the console, aiding in debugging and monitoring API traffic during development. For more persistent or structured application-level logging (e.g., critical errors, significant business events, audit trails), a dedicated logging library (like Winston or Bunyan) or a custom solution leveraging the</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:rPr><w:rStyle w:val="VerbatimChar" /></w:rPr><w:t xml:space="preserve">Log.js</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:t xml:space="preserve">model might be used, although the primary observed logging is request-based via Morgan.</w:t></w:r></w:p>
    <w:p><w:pPr><w:pStyle w:val="FirstParagraph" /></w:pPr><w:r><w:rPr><w:b /><w:bCs /></w:rPr><w:t xml:space="preserve">III. Frontend Design &amp; Development (React, Vite, TypeScript, Material-UI)</w:t></w:r></w:p>
    <w:p><w:pPr><w:pStyle w:val="BodyText" /></w:pPr><w:r><w:rPr><w:b /><w:bCs /></w:rPr><w:t xml:space="preserve">1. Code Organization &amp; Component Structure</w:t></w:r></w:p>
    <w:p><w:pPr><w:pStyle w:val="BodyText" /></w:pPr><w:r><w:t xml:space="preserve">The frontend codebase, located in</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:rPr><w:rStyle w:val="VerbatimChar" /></w:rPr><w:t xml:space="preserve">frontend/src</w:t></w:r><w:r><w:t xml:space="preserve">, follows a standard React project structure, promoting modularity and maintainability:</w:t></w:r></w:p>
    <w:p><w:pPr><w:pStyle w:val="Compact" /><w:numPr><w:ilvl w:val="0" /><w:numId w:val="1073" /></w:numPr></w:pPr><w:r><w:rPr><w:rStyle w:val="VerbatimChar" /></w:rPr><w:t xml:space="preserve">components/</w:t></w:r><w:r><w:t xml:space="preserve">: This directory houses reusable UI components that are used across multiple pages or are complex enough to be isolated. Examples would include generic</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:rPr><w:rStyle w:val="VerbatimChar" /></w:rPr><w:t xml:space="preserve">Button</w:t></w:r><w:r><w:t xml:space="preserve">,</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:rPr><w:rStyle w:val="VerbatimChar" /></w:rPr><w:t xml:space="preserve">Card</w:t></w:r><w:r><w:t xml:space="preserve">,</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:rPr><w:rStyle w:val="VerbatimChar" /></w:rPr><w:t xml:space="preserve">Modal</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:t xml:space="preserve">components, or more specific ones like</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:rPr><w:rStyle w:val="VerbatimChar" /></w:rPr><w:t xml:space="preserve">PickupRequestForm</w:t></w:r><w:r><w:t xml:space="preserve">,</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:rPr><w:rStyle w:val="VerbatimChar" /></w:rPr><w:t xml:space="preserve">ScheduleCalendar</w:t></w:r><w:r><w:t xml:space="preserve">,</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:rPr><w:rStyle w:val="VerbatimChar" /></w:rPr><w:t xml:space="preserve">Header</w:t></w:r><w:r><w:t xml:space="preserve">,</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:rPr><w:rStyle w:val="VerbatimChar" /></w:rPr><w:t xml:space="preserve">Sidebar</w:t></w:r><w:r><w:t xml:space="preserve">, and</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:rPr><w:rStyle w:val="VerbatimChar" /></w:rPr><w:t xml:space="preserve">Footer</w:t></w:r><w:r><w:t xml:space="preserve">.</w:t></w:r></w:p>
    <w:p><w:pPr><w:pStyle w:val="Compact" /><w:numPr><w:ilvl w:val="0" /><w:numId w:val="1073" /></w:numPr></w:pPr><w:r><w:rPr><w:rStyle w:val="VerbatimChar" /></w:rPr><w:t xml:space="preserve">pages/</w:t></w:r><w:r><w:t xml:space="preserve">: Contains higher-level components that typically represent distinct screens or views within the application. Each page component would compose various reusable components and handle the logic specific to that view (e.g.,</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:rPr><w:rStyle w:val="VerbatimChar" /></w:rPr><w:t xml:space="preserve">LoginPage.jsx</w:t></w:r><w:r><w:t xml:space="preserve">,</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:rPr><w:rStyle w:val="VerbatimChar" /></w:rPr><w:t xml:space="preserve">AdminDashboardPage.jsx</w:t></w:r><w:r><w:t xml:space="preserve">,</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:rPr><w:rStyle w:val="VerbatimChar" /></w:rPr><w:t xml:space="preserve">CustomerPickupHistoryPage.jsx</w:t></w:r><w:r><w:t xml:space="preserve">).</w:t></w:r></w:p>
    <w:p><w:pPr><w:pStyle w:val="Compact" /><w:numPr><w:ilvl w:val="0" /><w:numId w:val="1073" /></w:numPr></w:pPr><w:r><w:rPr><w:rStyle w:val="VerbatimChar" /></w:rPr><w:t xml:space="preserve">services/</w:t></w:r><w:r><w:t xml:space="preserve">: This directory is expected to contain modules responsible for interacting with the backend API. Functions within these services (e.g.,</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:rPr><w:rStyle w:val="VerbatimChar" /></w:rPr><w:t xml:space="preserve">authService.js</w:t></w:r><w:r><w:t xml:space="preserve">,</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:rPr><w:rStyle w:val="VerbatimChar" /></w:rPr><w:t xml:space="preserve">pickupService.js</w:t></w:r><w:r><w:t xml:space="preserve">,</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:rPr><w:rStyle w:val="VerbatimChar" /></w:rPr><w:t xml:space="preserve">financialService.js</w:t></w:r><w:r><w:t xml:space="preserve">) would use</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:rPr><w:rStyle w:val="VerbatimChar" /></w:rPr><w:t xml:space="preserve">axios</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:t xml:space="preserve">to make HTTP requests, handle request/response transformations, and manage API-related concerns.</w:t></w:r></w:p>
    <w:p><w:pPr><w:pStyle w:val="Compact" /><w:numPr><w:ilvl w:val="0" /><w:numId w:val="1073" /></w:numPr></w:pPr><w:r><w:rPr><w:rStyle w:val="VerbatimChar" /></w:rPr><w:t xml:space="preserve">contexts/</w:t></w:r><w:r><w:t xml:space="preserve">: Implements the React Context API for managing global or shared state that needs to be accessible by multiple components without prop drilling. A key example is</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:rPr><w:rStyle w:val="VerbatimChar" /></w:rPr><w:t xml:space="preserve">AuthContext.js</w:t></w:r><w:r><w:t xml:space="preserve">, which would manage user authentication status, user details, and provide login/logout functions to the rest of the application.</w:t></w:r></w:p>
    <w:p><w:pPr><w:pStyle w:val="Compact" /><w:numPr><w:ilvl w:val="0" /><w:numId w:val="1073" /></w:numPr></w:pPr><w:r><w:rPr><w:rStyle w:val="VerbatimChar" /></w:rPr><w:t xml:space="preserve">hooks/</w:t></w:r><w:r><w:t xml:space="preserve">: Stores custom React Hooks, which are functions that let you</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:t xml:space="preserve">“hook into”</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:t xml:space="preserve">React state and lifecycle features from function components. These are used to encapsulate and reuse stateful logic.</w:t></w:r></w:p>
    <w:p><w:pPr><w:pStyle w:val="Compact" /><w:numPr><w:ilvl w:val="0" /><w:numId w:val="1073" /></w:numPr></w:pPr><w:r><w:rPr><w:rStyle w:val="VerbatimChar" /></w:rPr><w:t xml:space="preserve">styles/</w:t></w:r><w:r><w:t xml:space="preserve">: Contains global CSS files (</w:t></w:r><w:r><w:rPr><w:rStyle w:val="VerbatimChar" /></w:rPr><w:t xml:space="preserve">index.css</w:t></w:r><w:r><w:t xml:space="preserve">,</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:rPr><w:rStyle w:val="VerbatimChar" /></w:rPr><w:t xml:space="preserve">App.css</w:t></w:r><w:r><w:t xml:space="preserve">), theme configurations (</w:t></w:r><w:r><w:rPr><w:rStyle w:val="VerbatimChar" /></w:rPr><w:t xml:space="preserve">muiTheme.js</w:t></w:r><w:r><w:t xml:space="preserve">,</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:rPr><w:rStyle w:val="VerbatimChar" /></w:rPr><w:t xml:space="preserve">theme.js</w:t></w:r><w:r><w:t xml:space="preserve">), and potentially CSS Modules or styled-components if used for component-specific styling.</w:t></w:r></w:p>
    <w:p><w:pPr><w:pStyle w:val="Compact" /><w:numPr><w:ilvl w:val="0" /><w:numId w:val="1073" /></w:numPr></w:pPr><w:r><w:rPr><w:rStyle w:val="VerbatimChar" /></w:rPr><w:t xml:space="preserve">assets/</w:t></w:r><w:r><w:t xml:space="preserve">: For static files like images, icons, and custom fonts.</w:t></w:r></w:p>
    <w:p><w:pPr><w:pStyle w:val="Compact" /><w:numPr><w:ilvl w:val="0" /><w:numId w:val="1073" /></w:numPr></w:pPr><w:r><w:rPr><w:rStyle w:val="VerbatimChar" /></w:rPr><w:t xml:space="preserve">lib/</w:t></w:r><w:r><w:t xml:space="preserve">: May contain utility functions, helper scripts, or configurations for third-party libraries.</w:t></w:r></w:p>
    <w:p><w:pPr><w:pStyle w:val="Compact" /><w:numPr><w:ilvl w:val="0" /><w:numId w:val="1073" /></w:numPr></w:pPr><w:r><w:rPr><w:rStyle w:val="VerbatimChar" /></w:rPr><w:t xml:space="preserve">App.jsx</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:t xml:space="preserve">/</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:rPr><w:rStyle w:val="VerbatimChar" /></w:rPr><w:t xml:space="preserve">App.tsx</w:t></w:r><w:r><w:t xml:space="preserve">: The root component of the application, typically responsible for setting up routing and overall layout structure.</w:t></w:r></w:p>
    <w:p><w:pPr><w:pStyle w:val="Compact" /><w:numPr><w:ilvl w:val="0" /><w:numId w:val="1073" /></w:numPr></w:pPr><w:r><w:rPr><w:rStyle w:val="VerbatimChar" /></w:rPr><w:t xml:space="preserve">main.tsx</w:t></w:r><w:r><w:t xml:space="preserve">: The entry point of the React application, where the root</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:rPr><w:rStyle w:val="VerbatimChar" /></w:rPr><w:t xml:space="preserve">App</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:t xml:space="preserve">component is rendered into the DOM.</w:t></w:r></w:p>
    <w:p><w:pPr><w:pStyle w:val="FirstParagraph" /></w:pPr><w:r><w:rPr><w:b /><w:bCs /></w:rPr><w:t xml:space="preserve">2. User Interface (UI) &amp; User Experience (UX) Design</w:t></w:r></w:p>
    <w:p><w:pPr><w:pStyle w:val="Compact" /><w:numPr><w:ilvl w:val="0" /><w:numId w:val="1074" /></w:numPr></w:pPr><w:r><w:rPr><w:b /><w:bCs /></w:rPr><w:t xml:space="preserve">Role-Specific Dashboards:</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:t xml:space="preserve">The application is designed to provide tailored dashboards for different user roles, ensuring users only see relevant information and have access to appropriate functionalities. For example:</w:t></w:r></w:p>
    <w:p><w:pPr><w:pStyle w:val="Compact" /><w:numPr><w:ilvl w:val="1" /><w:numId w:val="1075" /></w:numPr></w:pPr><w:r><w:rPr><w:b /><w:bCs /></w:rPr><w:t xml:space="preserve">Admin Dashboard:</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:t xml:space="preserve">A comprehensive overview of system operations, user management, financial summaries, complaint tracking, and access to all module configurations.</w:t></w:r></w:p>
    <w:p><w:pPr><w:pStyle w:val="Compact" /><w:numPr><w:ilvl w:val="1" /><w:numId w:val="1075" /></w:numPr></w:pPr><w:r><w:rPr><w:b /><w:bCs /></w:rPr><w:t xml:space="preserve">Customer Dashboard:</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:t xml:space="preserve">Enables users to schedule/manage pickups, view service and billing history, manage subscriptions, make payments via Stripe, and submit complaints or feedback.</w:t></w:r></w:p>
    <w:p><w:pPr><w:pStyle w:val="Compact" /><w:numPr><w:ilvl w:val="1" /><w:numId w:val="1075" /></w:numPr></w:pPr><w:r><w:rPr><w:b /><w:bCs /></w:rPr><w:t xml:space="preserve">Staff (Driver/Collector) Dashboard:</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:t xml:space="preserve">Primarily focused on displaying assigned routes and schedules, allowing for task completion updates, and potentially communication with supervisors.</w:t></w:r></w:p>
    <w:p><w:pPr><w:pStyle w:val="Compact" /><w:numPr><w:ilvl w:val="1" /><w:numId w:val="1075" /></w:numPr></w:pPr><w:r><w:rPr><w:b /><w:bCs /></w:rPr><w:t xml:space="preserve">Financial Manager Dashboard:</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:t xml:space="preserve">Provides tools for managing subscription plans, invoicing, payment tracking, payroll processing, expense management, and generating detailed financial reports.</w:t></w:r></w:p>
    <w:p><w:pPr><w:pStyle w:val="Compact" /><w:numPr><w:ilvl w:val="1" /><w:numId w:val="1075" /></w:numPr></w:pPr><w:r><w:rPr><w:b /><w:bCs /></w:rPr><w:t xml:space="preserve">Recycler Dashboard:</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:t xml:space="preserve">Allows recyclers to view available recyclable materials, submit purchase requests, track order statuses, and manage their transactions.</w:t></w:r></w:p>
    <w:p><w:pPr><w:pStyle w:val="Compact" /><w:numPr><w:ilvl w:val="0" /><w:numId w:val="1074" /></w:numPr></w:pPr><w:r><w:rPr><w:b /><w:bCs /></w:rPr><w:t xml:space="preserve">User Workflows:</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:t xml:space="preserve">Key user tasks are designed to be intuitive. For instance, submitting a pickup request involves a guided form where users input details, select their location using an integrated map (Leaflet is a dependency, suggesting interactive map features), and receive immediate confirmation and subsequent status updates. Complaint submission uses a dedicated form, with tracking available through the user’s dashboard.</w:t></w:r></w:p>
    <w:p><w:pPr><w:pStyle w:val="Compact" /><w:numPr><w:ilvl w:val="0" /><w:numId w:val="1074" /></w:numPr></w:pPr><w:r><w:rPr><w:b /><w:bCs /></w:rPr><w:t xml:space="preserve">Responsive Design:</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:t xml:space="preserve">The application aims for responsiveness across various devices (desktops, tablets, mobile phones). This is achieved through a combination of Material-UI’s responsive grid system and components, along with custom CSS media queries defined in files within the</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:rPr><w:rStyle w:val="VerbatimChar" /></w:rPr><w:t xml:space="preserve">styles</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:t xml:space="preserve">directory (e.g.,</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:rPr><w:rStyle w:val="VerbatimChar" /></w:rPr><w:t xml:space="preserve">index.css</w:t></w:r><w:r><w:t xml:space="preserve">,</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:rPr><w:rStyle w:val="VerbatimChar" /></w:rPr><w:t xml:space="preserve">App.css</w:t></w:r><w:r><w:t xml:space="preserve">,</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:rPr><w:rStyle w:val="VerbatimChar" /></w:rPr><w:t xml:space="preserve">variables.css</w:t></w:r><w:r><w:t xml:space="preserve">).</w:t></w:r></w:p>
    <w:p><w:pPr><w:pStyle w:val="Compact" /><w:numPr><w:ilvl w:val="0" /><w:numId w:val="1074" /></w:numPr></w:pPr><w:r><w:rPr><w:b /><w:bCs /></w:rPr><w:t xml:space="preserve">Material-UI (MUI):</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:t xml:space="preserve">The extensive use of Material-UI (</w:t></w:r><w:r><w:rPr><w:rStyle w:val="VerbatimChar" /></w:rPr><w:t xml:space="preserve">@mui/material</w:t></w:r><w:r><w:t xml:space="preserve">,</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:rPr><w:rStyle w:val="VerbatimChar" /></w:rPr><w:t xml:space="preserve">@mui/icons-material</w:t></w:r><w:r><w:t xml:space="preserve">,</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:rPr><w:rStyle w:val="VerbatimChar" /></w:rPr><w:t xml:space="preserve">@mui/x-date-pickers</w:t></w:r><w:r><w:t xml:space="preserve">) ensures a consistent and professional user interface. MUI provides a rich library of pre-built, customizable components (buttons, forms, data tables, navigation elements, date/time pickers, etc.) that adhere to Material Design guidelines. The application leverages MUI’s theming capabilities (configured in</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:rPr><w:rStyle w:val="VerbatimChar" /></w:rPr><w:t xml:space="preserve">muiTheme.js</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:t xml:space="preserve">and</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:rPr><w:rStyle w:val="VerbatimChar" /></w:rPr><w:t xml:space="preserve">theme.js</w:t></w:r><w:r><w:t xml:space="preserve">) to apply SmartBin’s branding and maintain visual consistency throughout.</w:t></w:r></w:p>
    <w:p><w:pPr><w:pStyle w:val="FirstParagraph" /></w:pPr><w:r><w:rPr><w:b /><w:bCs /></w:rPr><w:t xml:space="preserve">3. API Integration (Client-Side)</w:t></w:r></w:p>
    <w:p><w:pPr><w:pStyle w:val="Compact" /><w:numPr><w:ilvl w:val="0" /><w:numId w:val="1076" /></w:numPr></w:pPr><w:r><w:rPr><w:b /><w:bCs /></w:rPr><w:t xml:space="preserve">Communication Protocol:</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:t xml:space="preserve">The frontend communicates with the backend API using HTTP requests, primarily facilitated by the</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:rPr><w:rStyle w:val="VerbatimChar" /></w:rPr><w:t xml:space="preserve">axios</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:t xml:space="preserve">library (listed as a dependency in</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:rPr><w:rStyle w:val="VerbatimChar" /></w:rPr><w:t xml:space="preserve">frontend/package.json</w:t></w:r><w:r><w:t xml:space="preserve">).</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:rPr><w:rStyle w:val="VerbatimChar" /></w:rPr><w:t xml:space="preserve">axios</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:t xml:space="preserve">is used to send GET, POST, PUT, DELETE requests to the RESTful endpoints exposed by the backend.</w:t></w:r></w:p>
    <w:p><w:pPr><w:pStyle w:val="Compact" /><w:numPr><w:ilvl w:val="0" /><w:numId w:val="1076" /></w:numPr></w:pPr><w:r><w:rPr><w:b /><w:bCs /></w:rPr><w:t xml:space="preserve">Request/Response Handling:</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:t xml:space="preserve">Service modules (in</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:rPr><w:rStyle w:val="VerbatimChar" /></w:rPr><w:t xml:space="preserve">frontend/src/services/</w:t></w:r><w:r><w:t xml:space="preserve">) typically encapsulate API call logic. They handle constructing request payloads, setting headers (e.g.,</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:rPr><w:rStyle w:val="VerbatimChar" /></w:rPr><w:t xml:space="preserve">Authorization</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:t xml:space="preserve">header with JWT for authenticated requests), and processing responses. Successful responses are used to update the client-side state and UI. API errors (e.g., 4xx, 5xx status codes) are caught, and user-friendly error messages or notifications are displayed, often through a global notification system or inline form errors.</w:t></w:r></w:p>
    <w:p><w:pPr><w:pStyle w:val="FirstParagraph" /></w:pPr><w:r><w:rPr><w:b /><w:bCs /></w:rPr><w:t xml:space="preserve">4. Frontend Routing</w:t></w:r></w:p>
    <w:p><w:pPr><w:pStyle w:val="Compact" /><w:numPr><w:ilvl w:val="0" /><w:numId w:val="1077" /></w:numPr></w:pPr><w:r><w:t xml:space="preserve">Client-side routing for the Single-Page Application (SPA) is managed by</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:rPr><w:rStyle w:val="VerbatimChar" /></w:rPr><w:t xml:space="preserve">react-router-dom</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:t xml:space="preserve">(a dependency in</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:rPr><w:rStyle w:val="VerbatimChar" /></w:rPr><w:t xml:space="preserve">frontend/package.json</w:t></w:r><w:r><w:t xml:space="preserve">). This library allows for defining routes that map URL paths to specific React components (pages), enabling navigation within the application without requiring a full page reload from the server. Route configuration is typically centralized in the</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:rPr><w:rStyle w:val="VerbatimChar" /></w:rPr><w:t xml:space="preserve">App.jsx</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:t xml:space="preserve">or</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:rPr><w:rStyle w:val="VerbatimChar" /></w:rPr><w:t xml:space="preserve">App.tsx</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:t xml:space="preserve">component, often including protected routes that require authentication before access.</w:t></w:r></w:p>
    <w:p><w:pPr><w:pStyle w:val="FirstParagraph" /></w:pPr><w:r><w:t xml:space="preserve">This chapter provides a comprehensive overview of SmartBin’s design and development. To further enhance understanding, visual aids such as an Entity-Relationship Diagram (ERD) for the database, key sequence diagrams (e.g., for user login with MFA, pickup request submission and processing flow), and high-level component diagrams for major frontend and backend modules are recommended and will be referenced or included as appropriate in the final report structure.</w:t></w:r></w:p>
    <w:bookmarkEnd w:id="40" />
    <w:bookmarkStart w:id="41" w:name="chapter-04-testing" />
    <w:p><w:pPr><w:pStyle w:val="Heading3" /></w:pPr><w:r><w:t xml:space="preserve">2.4 Chapter 04: Testing</w:t></w:r></w:p>
    <w:p><w:pPr><w:pStyle w:val="Compact" /><w:numPr><w:ilvl w:val="0" /><w:numId w:val="1078" /></w:numPr></w:pPr><w:r><w:t xml:space="preserve">Complete</w:t></w:r></w:p>
    <w:p><w:pPr><w:pStyle w:val="BlockText" /></w:pPr><w:r><w:t xml:space="preserve">[!important]</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:t xml:space="preserve">Acceptance criteria and main test cases with results. Include at least 5 test cases for each component.</w:t></w:r></w:p>
    <w:bookmarkEnd w:id="41" />
    <w:bookmarkStart w:id="42" w:name="chapter-05-evaluation-and-conclusion" />
    <w:p><w:pPr><w:pStyle w:val="Heading3" /></w:pPr><w:r><w:t xml:space="preserve">2.5 Chapter 05: Evaluation and Conclusion</w:t></w:r></w:p>
    <w:p><w:pPr><w:pStyle w:val="Compact" /><w:numPr><w:ilvl w:val="0" /><w:numId w:val="1079" /></w:numPr></w:pPr><w:r><w:t xml:space="preserve">Complete</w:t></w:r></w:p>
    <w:p><w:pPr><w:pStyle w:val="BlockText" /></w:pPr><w:r><w:t xml:space="preserve">[!tip]</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:t xml:space="preserve">Evaluate with test results and/or user/expert feedback. Conclude how the objectives are met and the aim is achieved.</w:t></w:r></w:p>
    <w:bookmarkEnd w:id="42" />
    <w:bookmarkStart w:id="43" w:name="references" />
    <w:p><w:pPr><w:pStyle w:val="Heading3" /></w:pPr><w:r><w:t xml:space="preserve">2.6 References</w:t></w:r></w:p>
    <w:p><w:pPr><w:pStyle w:val="Compact" /><w:numPr><w:ilvl w:val="0" /><w:numId w:val="1080" /></w:numPr></w:pPr><w:r><w:t xml:space="preserve">Complete</w:t></w:r></w:p>
    <w:p><w:pPr><w:pStyle w:val="BlockText" /></w:pPr><w:r><w:t xml:space="preserve">[!info]</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:t xml:space="preserve">- Recommend to use a referencing tool to cite the references and generate the references list</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:t xml:space="preserve">- Add at least 10 to 15 references using IEEE format</w:t></w:r></w:p>
    <w:p><w:r><w:pict><v:rect style="width:0;height:1.5pt" o:hralign="center" o:hrstd="t" o:hr="t" /></w:pict></w:r></w:p>
    <w:bookmarkEnd w:id="43" />
    <w:bookmarkEnd w:id="44" />
    <w:bookmarkStart w:id="48" w:name="post-body-section" />
    <w:p><w:pPr><w:pStyle w:val="Heading2" /></w:pPr><w:r><w:t xml:space="preserve">3. Post-body Section</w:t></w:r></w:p>
    <w:p><w:pPr><w:pStyle w:val="Compact" /><w:numPr><w:ilvl w:val="0" /><w:numId w:val="1081" /></w:numPr></w:pPr><w:r><w:t xml:space="preserve">Complete</w:t></w:r></w:p>
    <w:bookmarkStart w:id="45" w:name="appendix-a-1-2-pages" />
    <w:p><w:pPr><w:pStyle w:val="Heading3" /></w:pPr><w:r><w:t xml:space="preserve">3.1 Appendix A (1-2 pages)</w:t></w:r></w:p>
    <w:p><w:pPr><w:pStyle w:val="Compact" /><w:numPr><w:ilvl w:val="0" /><w:numId w:val="1082" /></w:numPr></w:pPr><w:r><w:t xml:space="preserve">Complete</w:t></w:r></w:p>
    <w:p><w:pPr><w:pStyle w:val="BlockText" /></w:pPr><w:r><w:t xml:space="preserve">[!info]</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:t xml:space="preserve">A table containing the work done by each member</w:t></w:r></w:p>
    <w:bookmarkEnd w:id="45" />
    <w:bookmarkStart w:id="46" w:name="appendix-b-1-page" />
    <w:p><w:pPr><w:pStyle w:val="Heading3" /></w:pPr><w:r><w:t xml:space="preserve">3.2 Appendix B (1 page)</w:t></w:r></w:p>
    <w:p><w:pPr><w:pStyle w:val="Compact" /><w:numPr><w:ilvl w:val="0" /><w:numId w:val="1083" /></w:numPr></w:pPr><w:r><w:t xml:space="preserve">Complete</w:t></w:r></w:p>
    <w:p><w:pPr><w:pStyle w:val="BlockText" /></w:pPr><w:r><w:t xml:space="preserve">[!info]</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:t xml:space="preserve">Contribution made to the final report by each member</w:t></w:r></w:p>
    <w:bookmarkEnd w:id="46" />
    <w:bookmarkStart w:id="47" w:name="appendix-c-if-any" />
    <w:p><w:pPr><w:pStyle w:val="Heading3" /></w:pPr><w:r><w:t xml:space="preserve">3.3 Appendix C (if any)</w:t></w:r></w:p>
    <w:p><w:pPr><w:pStyle w:val="Compact" /><w:numPr><w:ilvl w:val="0" /><w:numId w:val="1084" /></w:numPr></w:pPr><w:r><w:t xml:space="preserve">Complete</w:t></w:r></w:p>
    <w:p><w:pPr><w:pStyle w:val="BlockText" /></w:pPr><w:r><w:t xml:space="preserve">[!warning]</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r><w:t xml:space="preserve">If there are any appendices, make sure to refer to them in the body. See the appendices section of this document and identify how they are referred within the document. Recommend to have main content in the main chapters and additional supporting content in Appendix C.</w:t></w:r></w:p>
    <w:bookmarkEnd w:id="47" />
    <w:bookmarkEnd w:id="48" />
    <w:bookmarkEnd w:id="49" />
    <w:sectPr>
      <w:footnotePr>
        
                
        <w:numRestart w:val="eachSect" />
        
              
      </w:footnotePr>
    </w:sectPr>
  </w:body>
</w:document>
